[{"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/index.tsx":"1","/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/reportWebVitals.ts":"2","/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx":"3"},{"size":554,"mtime":1680187300029,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1680187300029,"results":"6","hashOfConfig":"5"},{"size":4762,"mtime":1681468231233,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"x8cm8r",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/index.tsx",[],[],[],"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/reportWebVitals.ts",[],[],"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx",["19","20","21","22","23","24","25","26","27"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles.css';\nimport {BOX_CONNECTIONS,  Objectron, ObjectronConfig , ResultsListener, ObjectronInterface, Results, Point2D, LandmarkConnectionArray} from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n// import { drawingUtils} from '@mediapipe/drawing_utils'\nimport {drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n\n// import {FpsView} from \"react-fps\";\n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n// navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n  \n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    console.log(\"Bypass device not support\");\n    // alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n    //       `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\n// const fpsControl = new controls.FPS();\n\nconst controls = window;\nconst drawingUtils = window;\nconst mpObjectron = window;\n\nconst videoElement =\n  document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\nconst canvasElement =\n  document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\nconst controlsElement =\n  document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\nconst canvasCtx = canvasElement.getContext('2d')!;\n\nvideoElement.setAttribute('autoplay', '');\nvideoElement.setAttribute('muted', '');\nvideoElement.setAttribute('playsinline', '')\n\n\nfunction App() {\n  \n  // const videoElement =\n  //   document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  // const canvasElement =\n  //   document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  // const controlsElement =\n  //   document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  // const canvasCtx = canvasElement.getContext('2d')!;\n\n \n  // Fix for iOS Safari from https://leemartin.dev/hello-webrtc-on-safari-11-e8bcb5335295\n\n\n    const objectron = new Objectron({locateFile: (file) => {\n      console.log(\"!!!!!!\", file);\n      return `./assets/objectron/${file}`;\n      // return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    }});\n\n    objectron.setOptions({\n      modelName: 'Shoe',\n      maxNumObjects: 3,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.99,\n    });\n\n    function onResults(results: Results) {\n      // console.log(\"run result\", results);\n      canvasCtx.save();\n      canvasCtx.drawImage(\n          results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (!!results.objectDetections) {\n        for (const detectedObject of results.objectDetections) {\n          console.log(detectedObject.keypoints);\n          // Reformat keypoint information as landmarks, for easy drawing.\n          const landmarks: Point2D[] = detectedObject.keypoints.map(x => x.point2d);\n          // // Draw bounding box.\n          drawConnectors(canvasCtx, landmarks, BOX_CONNECTIONS, {color: '#FF0000'});\n\n          drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n        }\n      }\n      canvasCtx.restore();\n    }\n\n    objectron.onResults(onResults);\n\n    const camera = new Camera(videoElement, {\n      onFrame: async () => {\n        \n        await objectron.send({image: videoElement});\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n// ###############################################################\n\n\n    \n\n\n// ###############################################################\n  return (\n    \n    <div className=\"App\">\n      {/* <FpsView/> */}\n      {/* <div className=\"container\">\n        <video className=\"input_video\"></video>\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"28","severity":1,"message":"29","line":2,"column":8,"nodeType":"30","messageId":"31","endLine":2,"endColumn":12},{"ruleId":"28","severity":1,"message":"32","line":5,"column":38,"nodeType":"30","messageId":"31","endLine":5,"endColumn":53},{"ruleId":"28","severity":1,"message":"33","line":5,"column":56,"nodeType":"30","messageId":"31","endLine":5,"endColumn":71},{"ruleId":"28","severity":1,"message":"34","line":5,"column":73,"nodeType":"30","messageId":"31","endLine":5,"endColumn":91},{"ruleId":"28","severity":1,"message":"35","line":5,"column":111,"nodeType":"30","messageId":"31","endLine":5,"endColumn":134},{"ruleId":"28","severity":1,"message":"36","line":51,"column":7,"nodeType":"30","messageId":"31","endLine":51,"endColumn":15},{"ruleId":"28","severity":1,"message":"37","line":52,"column":7,"nodeType":"30","messageId":"31","endLine":52,"endColumn":19},{"ruleId":"28","severity":1,"message":"38","line":53,"column":7,"nodeType":"30","messageId":"31","endLine":53,"endColumn":18},{"ruleId":"28","severity":1,"message":"39","line":59,"column":7,"nodeType":"30","messageId":"31","endLine":59,"endColumn":22},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ObjectronConfig' is defined but never used.","'ResultsListener' is defined but never used.","'ObjectronInterface' is defined but never used.","'LandmarkConnectionArray' is defined but never used.","'controls' is assigned a value but never used.","'drawingUtils' is assigned a value but never used.","'mpObjectron' is assigned a value but never used.","'controlsElement' is assigned a value but never used."]