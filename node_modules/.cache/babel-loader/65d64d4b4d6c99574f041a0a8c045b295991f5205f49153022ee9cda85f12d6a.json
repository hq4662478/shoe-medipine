{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst trim_1 = require(\"./trim\");\nexports.formatVersion = (version, versionTruncation) => {\n  if (version === undefined) return \"\";\n  const versionString = trim_1.trim(version, \". \").replace(new RegExp(\"_\", \"g\"), \".\");\n  const versionParts = versionString.split(\".\");\n  // Return if the string is not only digits once we removed the dots\n  if (!/^\\d+$/.test(versionParts.join(\"\"))) {\n    return versionString;\n  }\n  if (versionTruncation !== 0) {\n    if (Number.isInteger(parseFloat(versionString))) {\n      return parseInt(versionString, 10).toFixed(1);\n    }\n  }\n  if (versionParts.length > 1) {\n    if (versionTruncation !== null) {\n      return versionParts.slice(0, versionTruncation + 1).join(\".\");\n    }\n  }\n  return versionString;\n};\nexports.parseBrowserEngineVersion = (userAgent, engine) => {\n  if (!engine) return \"\";\n  if (engine === \"Gecko\") {\n    const geckoVersionRegex = /[ ](?:rv[: ]([0-9\\.]+)).*gecko\\/[0-9]{8,10}/i;\n    const match = userAgent.match(geckoVersionRegex);\n    if (match) {\n      return match.pop();\n    }\n  }\n  const regex = new RegExp(`${engine}\\\\s*\\\\/?\\\\s*((?:(?=\\\\d+\\\\.\\\\d)\\\\d+[.\\\\d]*|\\\\d{1,7}(?=(?:\\\\D|$))))`, \"i\");\n  const match = userAgent.match(regex);\n  if (!match) return \"\";\n  return match.pop();\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","trim_1","require","formatVersion","version","versionTruncation","undefined","versionString","trim","replace","RegExp","versionParts","split","test","join","Number","isInteger","parseFloat","parseInt","toFixed","length","slice","parseBrowserEngineVersion","userAgent","engine","geckoVersionRegex","match","pop","regex"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/device-detector-js/dist/utils/version.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trim_1 = require(\"./trim\");\nexports.formatVersion = (version, versionTruncation) => {\n    if (version === undefined)\n        return \"\";\n    const versionString = trim_1.trim(version, \". \").replace(new RegExp(\"_\", \"g\"), \".\");\n    const versionParts = versionString.split(\".\");\n    // Return if the string is not only digits once we removed the dots\n    if (!/^\\d+$/.test(versionParts.join(\"\"))) {\n        return versionString;\n    }\n    if (versionTruncation !== 0) {\n        if (Number.isInteger(parseFloat(versionString))) {\n            return parseInt(versionString, 10).toFixed(1);\n        }\n    }\n    if (versionParts.length > 1) {\n        if (versionTruncation !== null) {\n            return versionParts.slice(0, versionTruncation + 1).join(\".\");\n        }\n    }\n    return versionString;\n};\nexports.parseBrowserEngineVersion = (userAgent, engine) => {\n    if (!engine)\n        return \"\";\n    if (engine === \"Gecko\") {\n        const geckoVersionRegex = /[ ](?:rv[: ]([0-9\\.]+)).*gecko\\/[0-9]{8,10}/i;\n        const match = userAgent.match(geckoVersionRegex);\n        if (match) {\n            return match.pop();\n        }\n    }\n    const regex = new RegExp(`${engine}\\\\s*\\\\/?\\\\s*((?:(?=\\\\d+\\\\.\\\\d)\\\\d+[.\\\\d]*|\\\\d{1,7}(?=(?:\\\\D|$))))`, \"i\");\n    const match = userAgent.match(regex);\n    if (!match)\n        return \"\";\n    return match.pop();\n};\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChCH,OAAO,CAACI,aAAa,GAAG,CAACC,OAAO,EAAEC,iBAAiB,KAAK;EACpD,IAAID,OAAO,KAAKE,SAAS,EACrB,OAAO,EAAE;EACb,MAAMC,aAAa,GAAGN,MAAM,CAACO,IAAI,CAACJ,OAAO,EAAE,IAAI,CAAC,CAACK,OAAO,CAAC,IAAIC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;EACnF,MAAMC,YAAY,GAAGJ,aAAa,CAACK,KAAK,CAAC,GAAG,CAAC;EAC7C;EACA,IAAI,CAAC,OAAO,CAACC,IAAI,CAACF,YAAY,CAACG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE;IACtC,OAAOP,aAAa;EACxB;EACA,IAAIF,iBAAiB,KAAK,CAAC,EAAE;IACzB,IAAIU,MAAM,CAACC,SAAS,CAACC,UAAU,CAACV,aAAa,CAAC,CAAC,EAAE;MAC7C,OAAOW,QAAQ,CAACX,aAAa,EAAE,EAAE,CAAC,CAACY,OAAO,CAAC,CAAC,CAAC;IACjD;EACJ;EACA,IAAIR,YAAY,CAACS,MAAM,GAAG,CAAC,EAAE;IACzB,IAAIf,iBAAiB,KAAK,IAAI,EAAE;MAC5B,OAAOM,YAAY,CAACU,KAAK,CAAC,CAAC,EAAEhB,iBAAiB,GAAG,CAAC,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC;IACjE;EACJ;EACA,OAAOP,aAAa;AACxB,CAAC;AACDR,OAAO,CAACuB,yBAAyB,GAAG,CAACC,SAAS,EAAEC,MAAM,KAAK;EACvD,IAAI,CAACA,MAAM,EACP,OAAO,EAAE;EACb,IAAIA,MAAM,KAAK,OAAO,EAAE;IACpB,MAAMC,iBAAiB,GAAG,8CAA8C;IACxE,MAAMC,KAAK,GAAGH,SAAS,CAACG,KAAK,CAACD,iBAAiB,CAAC;IAChD,IAAIC,KAAK,EAAE;MACP,OAAOA,KAAK,CAACC,GAAG,EAAE;IACtB;EACJ;EACA,MAAMC,KAAK,GAAG,IAAIlB,MAAM,CAAE,GAAEc,MAAO,mEAAkE,EAAE,GAAG,CAAC;EAC3G,MAAME,KAAK,GAAGH,SAAS,CAACG,KAAK,CAACE,KAAK,CAAC;EACpC,IAAI,CAACF,KAAK,EACN,OAAO,EAAE;EACb,OAAOA,KAAK,CAACC,GAAG,EAAE;AACtB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}