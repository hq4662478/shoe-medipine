{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst consoles_json_1 = __importDefault(require(\"../../fixtures/regexes/device/consoles.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass ConsoleParser {\n  constructor() {\n    this.parse = userAgent => {\n      const result = {\n        type: \"\",\n        brand: \"\",\n        model: \"\"\n      };\n      for (const [brand, gameConsole] of Object.entries(consoles_json_1.default)) {\n        const match = user_agent_1.userAgentParser(gameConsole.regex, userAgent);\n        if (!match) continue;\n        result.type = gameConsole.device;\n        result.brand = brand;\n        if (\"model\" in gameConsole && gameConsole.model) {\n          result.model = variable_replacement_1.variableReplacement(gameConsole.model, match).trim();\n        } else if (\"models\" in gameConsole && gameConsole.models) {\n          for (const model of gameConsole.models) {\n            const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n            if (!modelMatch) continue;\n            result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n            break;\n          }\n        }\n        break;\n      }\n      return result;\n    };\n  }\n}\nexports.default = ConsoleParser;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","consoles_json_1","require","variable_replacement_1","user_agent_1","ConsoleParser","constructor","parse","userAgent","result","type","brand","model","gameConsole","entries","default","match","userAgentParser","regex","device","variableReplacement","trim","models","modelMatch"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/device-detector-js/dist/parsers/device/consoles.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst consoles_json_1 = __importDefault(require(\"../../fixtures/regexes/device/consoles.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass ConsoleParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            for (const [brand, gameConsole] of Object.entries(consoles_json_1.default)) {\n                const match = user_agent_1.userAgentParser(gameConsole.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = gameConsole.device;\n                result.brand = brand;\n                if (\"model\" in gameConsole && gameConsole.model) {\n                    result.model = variable_replacement_1.variableReplacement(gameConsole.model, match).trim();\n                }\n                else if (\"models\" in gameConsole && gameConsole.models) {\n                    for (const model of gameConsole.models) {\n                        const modelMatch = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!modelMatch)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, modelMatch).trim();\n                        break;\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = ConsoleParser;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,eAAe,GAAGP,eAAe,CAACQ,OAAO,CAAC,6CAA6C,CAAC,CAAC;AAC/F,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAC1E,MAAME,YAAY,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACtD,MAAMG,aAAa,CAAC;EAChBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAIC,SAAS,IAAK;MACxB,MAAMC,MAAM,GAAG;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACX,CAAC;MACD,KAAK,MAAM,CAACD,KAAK,EAAEE,WAAW,CAAC,IAAIhB,MAAM,CAACiB,OAAO,CAACb,eAAe,CAACc,OAAO,CAAC,EAAE;QACxE,MAAMC,KAAK,GAAGZ,YAAY,CAACa,eAAe,CAACJ,WAAW,CAACK,KAAK,EAAEV,SAAS,CAAC;QACxE,IAAI,CAACQ,KAAK,EACN;QACJP,MAAM,CAACC,IAAI,GAAGG,WAAW,CAACM,MAAM;QAChCV,MAAM,CAACE,KAAK,GAAGA,KAAK;QACpB,IAAI,OAAO,IAAIE,WAAW,IAAIA,WAAW,CAACD,KAAK,EAAE;UAC7CH,MAAM,CAACG,KAAK,GAAGT,sBAAsB,CAACiB,mBAAmB,CAACP,WAAW,CAACD,KAAK,EAAEI,KAAK,CAAC,CAACK,IAAI,EAAE;QAC9F,CAAC,MACI,IAAI,QAAQ,IAAIR,WAAW,IAAIA,WAAW,CAACS,MAAM,EAAE;UACpD,KAAK,MAAMV,KAAK,IAAIC,WAAW,CAACS,MAAM,EAAE;YACpC,MAAMC,UAAU,GAAGnB,YAAY,CAACa,eAAe,CAACL,KAAK,CAACM,KAAK,EAAEV,SAAS,CAAC;YACvE,IAAI,CAACe,UAAU,EACX;YACJd,MAAM,CAACG,KAAK,GAAGT,sBAAsB,CAACiB,mBAAmB,CAACR,KAAK,CAACA,KAAK,EAAEW,UAAU,CAAC,CAACF,IAAI,EAAE;YACzF;UACJ;QACJ;QACA;MACJ;MACA,OAAOZ,MAAM;IACjB,CAAC;EACL;AACJ;AACAV,OAAO,CAACgB,OAAO,GAAGV,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}