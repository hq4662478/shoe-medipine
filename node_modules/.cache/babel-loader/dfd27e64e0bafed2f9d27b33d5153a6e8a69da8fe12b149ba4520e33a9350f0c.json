{"ast":null,"code":"var _jsxFileName = \"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n  function onResults(results) {\n    canvasCtx.save();\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        // Reformat keypoint information as landmarks, for easy drawing.\n        const landmarks = detectedObject.keypoints.map(x => x.point2d);\n        // Draw bounding box.\n        drawingUtils.drawConnectors(canvasCtx, landmarks, mpObjectron.BOX_CONNECTIONS, {\n          color: '#FF0000'\n        });\n        // Draw centroid.\n        drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {\n          color: '#FFFFFF'\n        });\n      }\n    }\n    canvasCtx.restore();\n  }\n  const objectron = new Objectron({\n    locateFile: file => {\n      return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    }\n  });\n  objectron.setOptions({\n    modelName: 'Chair',\n    maxNumObjects: 3\n  });\n  objectron.onResults(onResults);\n  const camera = new Camera(videoElement, {\n    onFrame: async () => {\n      await objectron.send({\n        image: videoElement\n      });\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","videoElement","document","getElementsByClassName","canvasElement","canvasCtx","getContext","onResults","results","save","drawImage","image","width","height","objectDetections","detectedObject","landmarks","keypoints","map","x","point2d","drawingUtils","drawConnectors","mpObjectron","BOX_CONNECTIONS","color","drawLandmarks","restore","objectron","Objectron","locateFile","file","setOptions","modelName","maxNumObjects","camera","Camera","onFrame","send","start","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n    const videoElement = document.getElementsByClassName('input_video')[0];\n    const canvasElement = document.getElementsByClassName('output_canvas')[0];\n    const canvasCtx = canvasElement.getContext('2d');\n  function onResults(results) {\n    canvasCtx.save();\n    canvasCtx.drawImage(\n        results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        // Reformat keypoint information as landmarks, for easy drawing.\n        const landmarks: mpObjectron.Point2D[] =\n            detectedObject.keypoints.map(x => x.point2d);\n        // Draw bounding box.\n        drawingUtils.drawConnectors(canvasCtx, landmarks,\n            mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n        // Draw centroid.\n        drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n      }\n    }\n    canvasCtx.restore();\n  }\n  \n  const objectron = new Objectron({locateFile: (file) => {\n    return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n  }});\n  objectron.setOptions({\n    modelName: 'Chair',\n    maxNumObjects: 3,\n  });\n  objectron.onResults(onResults);\n  \n  const camera = new Camera(videoElement, {\n    onFrame: async () => {\n      await objectron.send({image: videoElement});\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n\n\n\n  return (\n    <div className=\"App\">\n      {/* <div class=\"container\">\n        <video class=\"input_video\"></video>\n        <canvas class=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EACX,MAAMC,YAAY,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EACtE,MAAMC,aAAa,GAAGF,QAAQ,CAACC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;EACzE,MAAME,SAAS,GAAGD,aAAa,CAACE,UAAU,CAAC,IAAI,CAAC;EAClD,SAASC,SAASA,CAACC,OAAO,EAAE;IAC1BH,SAAS,CAACI,IAAI,EAAE;IAChBJ,SAAS,CAACK,SAAS,CACfF,OAAO,CAACG,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEP,aAAa,CAACQ,KAAK,EAAER,aAAa,CAACS,MAAM,CAAC;IACnE,IAAI,CAAC,CAACL,OAAO,CAACM,gBAAgB,EAAE;MAC9B,KAAK,MAAMC,cAAc,IAAIP,OAAO,CAACM,gBAAgB,EAAE;QACrD;QACA,MAAME,SAAgC,GAClCD,cAAc,CAACE,SAAS,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC;QAChD;QACAC,YAAY,CAACC,cAAc,CAACjB,SAAS,EAAEW,SAAS,EAC5CO,WAAW,CAACC,eAAe,EAAE;UAACC,KAAK,EAAE;QAAS,CAAC,CAAC;QACpD;QACAJ,YAAY,CAACK,aAAa,CAACrB,SAAS,EAAE,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;UAACS,KAAK,EAAE;QAAS,CAAC,CAAC;MAC3E;IACF;IACApB,SAAS,CAACsB,OAAO,EAAE;EACrB;EAEA,MAAMC,SAAS,GAAG,IAAIC,SAAS,CAAC;IAACC,UAAU,EAAGC,IAAI,IAAK;MACrD,OAAQ,qDAAoDA,IAAK,EAAC;IACpE;EAAC,CAAC,CAAC;EACHH,SAAS,CAACI,UAAU,CAAC;IACnBC,SAAS,EAAE,OAAO;IAClBC,aAAa,EAAE;EACjB,CAAC,CAAC;EACFN,SAAS,CAACrB,SAAS,CAACA,SAAS,CAAC;EAE9B,MAAM4B,MAAM,GAAG,IAAIC,MAAM,CAACnC,YAAY,EAAE;IACtCoC,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMT,SAAS,CAACU,IAAI,CAAC;QAAC3B,KAAK,EAAEV;MAAY,CAAC,CAAC;IAC7C,CAAC;IACDW,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EACFsB,MAAM,CAACI,KAAK,EAAE;EAId,oBACExC,OAAA;IAAKyC,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKd;AAEV;AAACC,EAAA,GAnDQ7C,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}