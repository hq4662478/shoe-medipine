{"ast":null,"code":"var _jsxFileName = \"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport './styles.css';\nimport { BOX_CONNECTIONS, Objectron } from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n// import { drawingUtils} from '@mediapipe/drawing_utils'\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntestSupport([{\n  client: 'Chrome'\n}]);\n// navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\nfunction testSupport(supportedDevices) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  // const detectedDevice_ = deviceDetector.parse(navigator.permissions.query({}));\n  // navigator.permissions.query({ name: \"camera\" }).then(res => {\n  //   if(res.state == \"granted\"){\n  //       // has permission\n  //   }\n  // });\n  // navigator.permissions.query({ name: 'camera' })\n\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    console.log(\"Bypass device not support\");\n    // alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n    //       `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n// const fpsControl = new controls.FPS();\n\nfunction App() {\n  const controls = window;\n  // const drawingUtils = window;\n  const mpObjectron = window;\n\n  // const config:ObjectronConfig = {locateFile: (file: File) => {\n  //   return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron@0.3.1627447724/${file}`;\n  // }};\n\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const controlsElement = document.getElementsByClassName('control-panel')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n\n  // function onResults(results: mpObjectron.Results): void {\n  //   // Hide the spinner.\n  //   document.body.classList.add('loaded');\n\n  //   console.log(results.image);\n  //   // Update the frame rate.\n  //   // fpsControl.tick();\n\n  //   // Draw the overlays.\n  //   canvasCtx.save();\n  //   canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n  //   if (!!results.objectDetections) {\n  //     for (const detectedObject of results.objectDetections) {\n  //       // Reformat keypoint information as landmarks, for easy drawing.\n  //       console.log(detectedObject);\n  //       // const landmarks:mpObjectron.Results =\n  //       //     detectedObject.keypoints.map(x => x.point2d);\n  //       // Draw bounding box.\n  //       // drawingUtils.drawConnectors(canvasCtx, landmarks,\n  //       //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n\n  //       // Draw Axes\n  //       // drawAxes(canvasCtx, landmarks, {\n  //       //   x: '#00FF00',\n  //       //   y: '#FF0000',\n  //       //   z: '#0000FF',\n  //       // });\n  //       // Draw centroid.\n  //       // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n  //     }\n  //   }\n  //   canvasCtx.restore();\n  // }\n\n  const objectron = new Objectron({\n    locateFile: file => {\n      console.log(\"!!!!!!\", file);\n      return `./assets/objectron/${file}`;\n      // return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    }\n  });\n\n  objectron.setOptions({\n    modelName: 'Shoe',\n    maxNumObjects: 3,\n    minDetectionConfidence: 0.5,\n    minTrackingConfidence: 0.99\n  });\n  function onResults(results) {\n    // console.log(\"run result\", results);\n    canvasCtx.save();\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        console.log(detectedObject.keypoints);\n        // Reformat keypoint information as landmarks, for easy drawing.\n        const landmarks = detectedObject.keypoints.map(x => x.point2d);\n        // // Draw bounding box.\n        drawConnectors(canvasCtx, landmarks, BOX_CONNECTIONS, {\n          color: '#FF0000'\n        });\n        // Draw centroid.\n        // Draw Axes\n        drawAxes(canvasCtx, landmarks, {\n          x: '#00FF00',\n          y: '#FF0000',\n          z: '#0000FF'\n        });\n        drawLandmarks(canvasCtx, [landmarks[0]], {\n          color: '#FFFFFF'\n        });\n      }\n    }\n    canvasCtx.restore();\n  }\n  objectron.onResults(onResults);\n  const camera = new Camera(videoElement, {\n    onFrame: async () => {\n      await objectron.send({\n        image: videoElement\n      });\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n  // ###############################################################\n\n  function drawAxes(canvasCtx, landmarks, color) {\n    const {\n      BACK_BOTTOM_RIGHT,\n      BACK_TOP_LEFT,\n      BACK_TOP_RIGHT,\n      FRONT_BOTTOM_LEFT,\n      FRONT_BOTTOM_RIGHT,\n      FRONT_TOP_RIGHT,\n      FRONT_TOP_LEFT,\n      CENTER\n    } = mpObjectron.BOX_KEYPOINTS;\n    const xMidPoint = lineIntersection([landmarks[BACK_BOTTOM_RIGHT], landmarks[FRONT_TOP_RIGHT]], [landmarks[BACK_TOP_RIGHT], landmarks[FRONT_BOTTOM_RIGHT]]);\n    const yMidPoint = lineIntersection([landmarks[BACK_TOP_LEFT], landmarks[FRONT_TOP_RIGHT]], [landmarks[FRONT_TOP_LEFT], landmarks[BACK_TOP_RIGHT]]);\n    const zMidPoint = lineIntersection([landmarks[FRONT_TOP_RIGHT], landmarks[FRONT_BOTTOM_LEFT]], [landmarks[FRONT_TOP_LEFT], landmarks[FRONT_BOTTOM_RIGHT]]);\n    const LINE_WIDTH = 8;\n    const TRIANGLE_BASE = 2 * LINE_WIDTH;\n    drawingUtils.drawConnectors(canvasCtx, [landmarks[CENTER], xMidPoint], [[0, 1]], {\n      color: color.x,\n      lineWidth: LINE_WIDTH\n    });\n    drawingUtils.drawConnectors(canvasCtx, [landmarks[CENTER], yMidPoint], [[0, 1]], {\n      color: color.y,\n      lineWidth: LINE_WIDTH\n    });\n    drawingUtils.drawConnectors(canvasCtx, [landmarks[CENTER], zMidPoint], [[0, 1]], {\n      color: color.z,\n      lineWidth: LINE_WIDTH\n    });\n    drawTriangle(canvasCtx, xMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.x, arctan360(xMidPoint.x - landmarks[CENTER].x, xMidPoint.y - landmarks[CENTER].y) + Math.PI / 2);\n    drawTriangle(canvasCtx, yMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.y, arctan360(yMidPoint.x - landmarks[CENTER].x, yMidPoint.y - landmarks[CENTER].y) + Math.PI / 2);\n    drawTriangle(canvasCtx, zMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.z, arctan360(zMidPoint.x - landmarks[CENTER].x, zMidPoint.y - landmarks[CENTER].y) + Math.PI / 2);\n  }\n\n  // ###############################################################\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BOX_CONNECTIONS","Objectron","Camera","DeviceDetector","drawConnectors","drawLandmarks","jsxDEV","_jsxDEV","testSupport","client","supportedDevices","deviceDetector","detectedDevice","parse","navigator","userAgent","isSupported","device","undefined","re","RegExp","test","name","os","console","log","App","controls","window","mpObjectron","videoElement","document","getElementsByClassName","canvasElement","controlsElement","canvasCtx","getContext","objectron","locateFile","file","setOptions","modelName","maxNumObjects","minDetectionConfidence","minTrackingConfidence","onResults","results","save","drawImage","image","width","height","objectDetections","detectedObject","keypoints","landmarks","map","x","point2d","color","drawAxes","y","z","restore","camera","onFrame","send","start","BACK_BOTTOM_RIGHT","BACK_TOP_LEFT","BACK_TOP_RIGHT","FRONT_BOTTOM_LEFT","FRONT_BOTTOM_RIGHT","FRONT_TOP_RIGHT","FRONT_TOP_LEFT","CENTER","BOX_KEYPOINTS","xMidPoint","lineIntersection","yMidPoint","zMidPoint","LINE_WIDTH","TRIANGLE_BASE","drawingUtils","lineWidth","drawTriangle","arctan360","Math","PI","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles.css';\nimport {BOX_CONNECTIONS,  Objectron, ObjectronConfig , ResultsListener, ObjectronInterface, Results, Point2D, LandmarkConnectionArray} from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n// import { drawingUtils} from '@mediapipe/drawing_utils'\nimport {drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n// navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  // const detectedDevice_ = deviceDetector.parse(navigator.permissions.query({}));\n  // navigator.permissions.query({ name: \"camera\" }).then(res => {\n  //   if(res.state == \"granted\"){\n  //       // has permission\n  //   }\n  // });\n  // navigator.permissions.query({ name: 'camera' })\n  \n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    console.log(\"Bypass device not support\");\n    // alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n    //       `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\n// const fpsControl = new controls.FPS();\n\n\nfunction App() {\n\n  \n\n\n  const controls = window;\n  // const drawingUtils = window;\n  const mpObjectron = window;\n\n  // const config:ObjectronConfig = {locateFile: (file: File) => {\n  //   return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron@0.3.1627447724/${file}`;\n  // }};\n\n  \n\n  const videoElement =\n    document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  const canvasElement =\n    document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  const controlsElement =\n    document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  const canvasCtx = canvasElement.getContext('2d')!;\n\n    \n\n    // function onResults(results: mpObjectron.Results): void {\n    //   // Hide the spinner.\n    //   document.body.classList.add('loaded');\n    \n    //   console.log(results.image);\n    //   // Update the frame rate.\n    //   // fpsControl.tick();\n    \n    //   // Draw the overlays.\n    //   canvasCtx.save();\n    //   canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    //   if (!!results.objectDetections) {\n    //     for (const detectedObject of results.objectDetections) {\n    //       // Reformat keypoint information as landmarks, for easy drawing.\n    //       console.log(detectedObject);\n    //       // const landmarks:mpObjectron.Results =\n    //       //     detectedObject.keypoints.map(x => x.point2d);\n    //       // Draw bounding box.\n    //       // drawingUtils.drawConnectors(canvasCtx, landmarks,\n    //       //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n    \n    //       // Draw Axes\n    //       // drawAxes(canvasCtx, landmarks, {\n    //       //   x: '#00FF00',\n    //       //   y: '#FF0000',\n    //       //   z: '#0000FF',\n    //       // });\n    //       // Draw centroid.\n    //       // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n    //     }\n    //   }\n    //   canvasCtx.restore();\n    // }\n\n    const objectron = new Objectron({locateFile: (file) => {\n      console.log(\"!!!!!!\", file);\n      return `./assets/objectron/${file}`;\n      // return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    }});\n\n    objectron.setOptions({\n      modelName: 'Shoe',\n      maxNumObjects: 3,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.99,\n    });\n\n\n\n    function onResults(results: Results) {\n      // console.log(\"run result\", results);\n      canvasCtx.save();\n      canvasCtx.drawImage(\n          results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (!!results.objectDetections) {\n        for (const detectedObject of results.objectDetections) {\n          console.log(detectedObject.keypoints);\n          // Reformat keypoint information as landmarks, for easy drawing.\n          const landmarks: Point2D[] = detectedObject.keypoints.map(x => x.point2d);\n          // // Draw bounding box.\n          drawConnectors(canvasCtx, landmarks, BOX_CONNECTIONS, {color: '#FF0000'});\n          // Draw centroid.\n          // Draw Axes\n          drawAxes(canvasCtx, landmarks, {\n            x: '#00FF00',\n            y: '#FF0000',\n            z: '#0000FF',\n          });\n          drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n        }\n      }\n      canvasCtx.restore();\n    }\n\n\n    \n\n    objectron.onResults(onResults);\n    \n    const camera = new Camera(videoElement, {\n      onFrame: async () => {\n        await objectron.send({image: videoElement});\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n// ###############################################################\n\n\nfunction drawAxes(\n  canvasCtx: CanvasRenderingContext2D, landmarks: mpObjectron.Point2D[],\n  color: {x: string; y: string; z: string;}) {\nconst {\n  BACK_BOTTOM_RIGHT,\n  BACK_TOP_LEFT,\n  BACK_TOP_RIGHT,\n  FRONT_BOTTOM_LEFT,\n  FRONT_BOTTOM_RIGHT,\n  FRONT_TOP_RIGHT,\n  FRONT_TOP_LEFT,\n  CENTER\n} = mpObjectron.BOX_KEYPOINTS;\n\nconst xMidPoint = lineIntersection(\n    [landmarks[BACK_BOTTOM_RIGHT], landmarks[FRONT_TOP_RIGHT]],\n    [landmarks[BACK_TOP_RIGHT], landmarks[FRONT_BOTTOM_RIGHT]]);\nconst yMidPoint = lineIntersection(\n    [landmarks[BACK_TOP_LEFT], landmarks[FRONT_TOP_RIGHT]],\n    [landmarks[FRONT_TOP_LEFT], landmarks[BACK_TOP_RIGHT]]);\nconst zMidPoint = lineIntersection(\n    [landmarks[FRONT_TOP_RIGHT], landmarks[FRONT_BOTTOM_LEFT]],\n    [landmarks[FRONT_TOP_LEFT], landmarks[FRONT_BOTTOM_RIGHT]]);\n\nconst LINE_WIDTH = 8;\nconst TRIANGLE_BASE = 2 * LINE_WIDTH;\n\ndrawingUtils.drawConnectors(\n    canvasCtx, [landmarks[CENTER], xMidPoint], [[0, 1]],\n    {color: color.x, lineWidth: LINE_WIDTH});\ndrawingUtils.drawConnectors(\n    canvasCtx, [landmarks[CENTER], yMidPoint], [[0, 1]],\n    {color: color.y, lineWidth: LINE_WIDTH});\ndrawingUtils.drawConnectors(\n    canvasCtx, [landmarks[CENTER], zMidPoint], [[0, 1]],\n    {color: color.z, lineWidth: LINE_WIDTH});\n\ndrawTriangle(\n    canvasCtx, xMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.x,\n    arctan360(\n        xMidPoint.x - landmarks[CENTER].x,\n        xMidPoint.y - landmarks[CENTER].y) +\n        Math.PI / 2);\ndrawTriangle(\n    canvasCtx, yMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.y,\n    arctan360(\n        yMidPoint.x - landmarks[CENTER].x,\n        yMidPoint.y - landmarks[CENTER].y) +\n        Math.PI / 2);\ndrawTriangle(\n    canvasCtx, zMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.z,\n    arctan360(\n        zMidPoint.x - landmarks[CENTER].x,\n        zMidPoint.y - landmarks[CENTER].y) +\n        Math.PI / 2);\n}\n\n\n// ###############################################################\n  return (\n    <div className=\"App\">\n      {/* <div className=\"container\">\n        <video className=\"input_video\"></video>\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}