{"ast":null,"code":"var _jsxFileName = \"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport './styles.css';\nimport { BOX_CONNECTIONS, Objectron } from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n// import { drawingUtils} from '@mediapipe/drawing_utils'\nimport { drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\nimport { FpsView } from \"react-fps\";\n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntestSupport([{\n  client: 'Chrome'\n}]);\n// navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\nfunction testSupport(supportedDevices) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  // const detectedDevice_ = deviceDetector.parse(navigator.permissions.query({}));\n  // navigator.permissions.query({ name: \"camera\" }).then(res => {\n  //   if(res.state == \"granted\"){\n  //       // has permission\n  //   }\n  // });\n  // navigator.permissions.query({ name: 'camera' })\n\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    console.log(\"Bypass device not support\");\n    // alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n    //       `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n// const fpsControl = new controls.FPS();\n\nconst controls = window;\nconst drawingUtils = window;\nconst mpObjectron = window;\nconst videoElement = document.getElementsByClassName('input_video')[0];\nconst canvasElement = document.getElementsByClassName('output_canvas')[0];\nconst controlsElement = document.getElementsByClassName('control-panel')[0];\nconst canvasCtx = canvasElement.getContext('2d');\nfunction App() {\n  // const controls = window;\n  // // const drawingUtils = window;\n  // const mpObjectron = window;\n\n  // const videoElement =\n  //   document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  // const canvasElement =\n  //   document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  // const controlsElement =\n  //   document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  // const canvasCtx = canvasElement.getContext('2d')!;\n\n  // Fix for iOS Safari from https://leemartin.dev/hello-webrtc-on-safari-11-e8bcb5335295\n  videoElement.setAttribute('autoplay', '');\n  videoElement.setAttribute('muted', '');\n  videoElement.setAttribute('playsinline', '');\n  const fpsControl = new controls.FPS();\n  const objectron = new Objectron({\n    locateFile: file => {\n      console.log(\"!!!!!!\", file);\n      return `./assets/objectron/${file}`;\n      // return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    }\n  });\n\n  objectron.setOptions({\n    modelName: 'Shoe',\n    maxNumObjects: 3,\n    minDetectionConfidence: 0.5,\n    minTrackingConfidence: 0.99\n  });\n  function onResults(results) {\n    // console.log(\"run result\", results);\n    canvasCtx.save();\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        console.log(detectedObject.keypoints);\n        // Reformat keypoint information as landmarks, for easy drawing.\n        const landmarks = detectedObject.keypoints.map(x => x.point2d);\n        // // Draw bounding box.\n        drawConnectors(canvasCtx, landmarks, BOX_CONNECTIONS, {\n          color: '#FF0000'\n        });\n        drawLandmarks(canvasCtx, [landmarks[0]], {\n          color: '#FFFFFF'\n        });\n      }\n    }\n    canvasCtx.restore();\n  }\n  objectron.onResults(onResults);\n  const camera = new Camera(videoElement, {\n    onFrame: async () => {\n      await objectron.send({\n        image: videoElement\n      });\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n  // ###############################################################\n\n  // ###############################################################\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(FpsView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BOX_CONNECTIONS","Objectron","Camera","DeviceDetector","drawConnectors","drawLandmarks","FpsView","jsxDEV","_jsxDEV","testSupport","client","supportedDevices","deviceDetector","detectedDevice","parse","navigator","userAgent","isSupported","device","undefined","re","RegExp","test","name","os","console","log","controls","window","drawingUtils","mpObjectron","videoElement","document","getElementsByClassName","canvasElement","controlsElement","canvasCtx","getContext","App","setAttribute","fpsControl","FPS","objectron","locateFile","file","setOptions","modelName","maxNumObjects","minDetectionConfidence","minTrackingConfidence","onResults","results","save","drawImage","image","width","height","objectDetections","detectedObject","keypoints","landmarks","map","x","point2d","color","restore","camera","onFrame","send","start","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles.css';\nimport {BOX_CONNECTIONS,  Objectron, ObjectronConfig , ResultsListener, ObjectronInterface, Results, Point2D, LandmarkConnectionArray} from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n// import { drawingUtils} from '@mediapipe/drawing_utils'\nimport {drawConnectors, drawLandmarks } from '@mediapipe/drawing_utils';\n\nimport {FpsView} from \"react-fps\";\n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n// navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  // const detectedDevice_ = deviceDetector.parse(navigator.permissions.query({}));\n  // navigator.permissions.query({ name: \"camera\" }).then(res => {\n  //   if(res.state == \"granted\"){\n  //       // has permission\n  //   }\n  // });\n  // navigator.permissions.query({ name: 'camera' })\n  \n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    console.log(\"Bypass device not support\");\n    // alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n    //       `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\n// const fpsControl = new controls.FPS();\n\nconst controls = window;\nconst drawingUtils = window;\nconst mpObjectron = window;\n\nconst videoElement =\n  document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\nconst canvasElement =\n  document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\nconst controlsElement =\n  document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\nconst canvasCtx = canvasElement.getContext('2d')!;\n\n\n\n\nfunction App() {\n  \n  // const controls = window;\n  // // const drawingUtils = window;\n  // const mpObjectron = window;\n\n  // const videoElement =\n  //   document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  // const canvasElement =\n  //   document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  // const controlsElement =\n  //   document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  // const canvasCtx = canvasElement.getContext('2d')!;\n\n \n  // Fix for iOS Safari from https://leemartin.dev/hello-webrtc-on-safari-11-e8bcb5335295\n  videoElement.setAttribute('autoplay', '');\n  videoElement.setAttribute('muted', '');\n  videoElement.setAttribute('playsinline', '')\n\n\n  const fpsControl = new controls.FPS();\n\n\n\n    const objectron = new Objectron({locateFile: (file) => {\n      console.log(\"!!!!!!\", file);\n      return `./assets/objectron/${file}`;\n      // return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    }});\n\n    objectron.setOptions({\n      modelName: 'Shoe',\n      maxNumObjects: 3,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.99,\n    });\n\n\n\n    function onResults(results: Results) {\n      // console.log(\"run result\", results);\n      canvasCtx.save();\n      canvasCtx.drawImage(\n          results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (!!results.objectDetections) {\n        for (const detectedObject of results.objectDetections) {\n          console.log(detectedObject.keypoints);\n          // Reformat keypoint information as landmarks, for easy drawing.\n          const landmarks: Point2D[] = detectedObject.keypoints.map(x => x.point2d);\n          // // Draw bounding box.\n          drawConnectors(canvasCtx, landmarks, BOX_CONNECTIONS, {color: '#FF0000'});\n\n          drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n        }\n      }\n      canvasCtx.restore();\n    }\n\n    objectron.onResults(onResults);\n\n\n    const camera = new Camera(videoElement, {\n      onFrame: async () => {\n        await objectron.send({image: videoElement});\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n// ###############################################################\n\n\n    \n\n\n// ###############################################################\n  return (\n    \n    <div className=\"App\">\n      <FpsView/>\n      {/* <div className=\"container\">\n        <video className=\"input_video\"></video>\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}