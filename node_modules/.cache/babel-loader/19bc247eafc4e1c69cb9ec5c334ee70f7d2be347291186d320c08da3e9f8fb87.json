{"ast":null,"code":"import r, { useRef as t, useState as e, useEffect as n, useMemo as o, useCallback as i } from \"react\";\nfunction a(r) {\n  var o = t([]),\n    i = t(0),\n    a = t(performance.now()),\n    c = t(0),\n    u = e([]),\n    p = u[0],\n    l = u[1],\n    f = function () {\n      var t = performance.now();\n      if (i.current += 1, t > a.current + 1e3) {\n        var e = t - a.current,\n          n = Math.round(1e3 * i.current / e);\n        if (o.current = o.current.concat(n), e > 1500) for (var u = 1; u <= (e - 1e3) / 1e3; u++) o.current = o.current.concat(0);\n        o.current = o.current.slice(Math.max(o.current.length - r, 0)), l(o.current), i.current = 0, a.current = performance.now();\n      }\n      c.current = requestAnimationFrame(f);\n    };\n  n(function () {\n    return c.current = requestAnimationFrame(f), function () {\n      cancelAnimationFrame(c.current);\n    };\n  }, []);\n  var g = (p.reduce(function (r, t) {\n    return r + t;\n  }, 0) / p.length).toFixed(2);\n  return {\n    fps: p,\n    avgFps: g,\n    maxFps: Math.max.apply(Math.max, p),\n    currentFps: p[p.length - 1]\n  };\n}\nvar c = function (t) {\n  var e = t.top,\n    n = void 0 === e ? 0 : e,\n    c = t.left,\n    u = void 0 === c ? 0 : c,\n    p = t.bottom,\n    l = void 0 === p ? \"auto\" : p,\n    f = t.right,\n    g = void 0 === f ? \"auto\" : f,\n    h = t.width,\n    m = void 0 === h ? 140 : h,\n    x = t.height,\n    d = void 0 === x ? 60 : x,\n    b = a(Math.floor(m / 2)),\n    s = b.fps,\n    v = b.avgFps,\n    F = b.maxFps,\n    S = b.currentFps,\n    y = function (r, t, e, n, a, c, u) {\n      return {\n        wrapperStyle: o(function () {\n          return {\n            zIndex: 999999,\n            position: \"fixed\",\n            width: r + 6 + \"px\",\n            height: t + 30 + \"px\",\n            padding: \"3px\",\n            backgroundColor: \"#21006f\",\n            color: \"#26F0FD\",\n            fontSize: \"1rem\",\n            lineHeight: \"1.3rem\",\n            fontFamily: \"Helvetica, Arial, sans-serif\",\n            fontWeight: 300,\n            boxSizing: \"border-box\",\n            top: e,\n            right: n,\n            bottom: a,\n            left: c\n          };\n        }, [r, t, e, n, a, c]),\n        graphStyle: o(function () {\n          return {\n            position: \"absolute\",\n            left: \"3px\",\n            right: \"3px\",\n            bottom: \"3px\",\n            height: t,\n            backgroundColor: \"#282844\",\n            MozBoxSizing: \"border-box\",\n            boxSizing: \"border-box\"\n          };\n        }, [t]),\n        barStyle: i(function (r, t) {\n          return {\n            position: \"absolute\",\n            bottom: \"0\",\n            right: 4 * (u - 1 - t) + \"px\",\n            height: r + \"px\",\n            width: \"4px\",\n            backgroundColor: \"#E200F7\",\n            MozBoxSizing: \"border-box\",\n            boxSizing: \"border-box\"\n          };\n        }, [u])\n      };\n    }(m, d, n, g, l, u, s.length),\n    z = y.graphStyle,\n    w = y.barStyle,\n    M = y.wrapperStyle;\n  return r.createElement(\"div\", {\n    style: M\n  }, r.createElement(\"span\", null, S, \" FPS (\", v, \" Avg)\"), r.createElement(\"div\", {\n    style: z\n  }, s.map(function (t, e) {\n    return r.createElement(\"div\", {\n      key: e,\n      style: w(d * t / F, e)\n    });\n  })));\n};\nexport { c as FpsView, a as useFps };","map":{"version":3,"names":["a","r","o","t","i","performance","now","c","u","e","p","l","f","calcFps","current","n","Math","round","concat","slice","max","length","requestAnimationFrame","cancelAnimationFrame","g","reduce","toFixed","fps","avgFps","maxFps","apply","currentFps","FpsView","top","left","bottom","right","h","width","m","x","height","d","b","floor","s","v","F","S","y","wrapperStyle","zIndex","position","padding","backgroundColor","color","fontSize","lineHeight","fontFamily","fontWeight","boxSizing","graphStyle","MozBoxSizing","barStyle","z","w","M","createElement","style","map","key","useFps"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/react-fps/src/useFps.ts","/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/react-fps/src/FpsView.tsx","/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/react-fps/src/useStyles.ts"],"sourcesContent":["import {useEffect, useRef, useState} from \"react\";\n\nexport default function useFps(windowWidth: number) {\n  const lastFpsValues = useRef<number[]>([]);\n  const frames = useRef(0);\n  const prevTime = useRef(performance.now());\n  const animRef = useRef(0);\n  const [fps, setFps] = useState<number[]>([]);\n\n  const calcFps = () => {\n    const t = performance.now();\n\n    frames.current += 1;\n\n    if (t > prevTime.current + 1000) {\n      const elapsedTime = t - prevTime.current;\n\n      const currentFps = Math.round((frames.current * 1000) / elapsedTime);\n\n      lastFpsValues.current = lastFpsValues.current.concat(currentFps);\n\n      if (elapsedTime > 1500) {\n        for (let i = 1; i <= (elapsedTime - 1000) / 1000; i++) {\n          lastFpsValues.current = lastFpsValues.current.concat(0);\n        }\n      }\n\n      lastFpsValues.current = lastFpsValues.current.slice(Math.max(lastFpsValues.current.length - windowWidth, 0));\n\n      setFps(lastFpsValues.current);\n\n      frames.current = 0;\n      prevTime.current = performance.now();\n    }\n\n    animRef.current = requestAnimationFrame(calcFps);\n  };\n\n  useEffect(() => {\n    animRef.current = requestAnimationFrame(calcFps);\n\n    return () => {\n      cancelAnimationFrame(animRef.current);\n    }\n  }, []);\n\n  const avgFps = (fps.reduce((a,b) => a + b, 0) / fps.length).toFixed(2);\n  const maxFps = Math.max.apply(Math.max, fps);\n  const currentFps = fps[fps.length - 1];\n\n  return {fps, avgFps, maxFps, currentFps};\n}","import React from \"react\";\nimport useFps from \"./useFps\";\nimport useStyles from \"./useStyles\";\n\ninterface ComponentProps {\n  width?: number;\n  height?: number;\n  top?: number | string;\n  left?: number | string;\n  bottom?: number | string;\n  right?: number | string;\n}\n\nconst FpsView: React.FC<ComponentProps> = ({top = 0, left = 0, bottom = 'auto', right = 'auto', width = 140, height = 60}) => {\n  const {fps, avgFps, maxFps, currentFps} = useFps(Math.floor(width / 2));\n  const {graphStyle, barStyle, wrapperStyle} = useStyles(width, height, top, right, bottom, left, fps.length);\n\n  return (\n    // @ts-ignore\n    <div style={wrapperStyle}>\n      <span>{currentFps} FPS ({avgFps} Avg)</span>\n      {/* @ts-ignore */}\n      <div style={graphStyle}>\n        {fps.map((val, i) => (\n          // @ts-ignore\n          <div key={i} style={barStyle((height * val) / maxFps, i)}/>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FpsView;\n","import {useCallback, useMemo} from \"react\";\n\ntype CssProp = number | string;\n\nexport default function useStyles(width: number, height: number, top: CssProp, right: CssProp, bottom: CssProp, left: CssProp, fpsLength: number) {\n  const wrapperStyle = useMemo(() => ({\n    zIndex: 999999,\n    position: 'fixed',\n    width: width + 6 + 'px',\n    height: height + 30 + 'px',\n    padding: '3px',\n    backgroundColor: '#21006f',\n    color: '#26F0FD',\n    fontSize: '1rem',\n    lineHeight: '1.3rem',\n    fontFamily: 'Helvetica, Arial, sans-serif',\n    fontWeight: 300,\n    boxSizing: 'border-box',\n    top,\n    right,\n    bottom,\n    left,\n  }), [width, height, top, right, bottom, left]);\n\n  const graphStyle = useMemo(() => ({\n    position: 'absolute',\n    left: '3px',\n    right: '3px',\n    bottom: '3px',\n    height,\n    backgroundColor: '#282844',\n    MozBoxSizing: 'border-box',\n    boxSizing: 'border-box'\n  }), [height]);\n\n  const barStyle = useCallback((calcHeight, i) => ({\n    position: 'absolute',\n    bottom: '0',\n    right: ((fpsLength - 1 - i) * 4) + 'px',\n    height: calcHeight + 'px',\n    width: '4px',\n    backgroundColor: '#E200F7',\n    MozBoxSizing: 'border-box',\n    boxSizing: 'border-box'\n  }), [fpsLength]);\n\n  return {wrapperStyle, graphStyle, barStyle};\n}"],"mappings":";SAEwBA,EAAOC,CAAA;EAC7B,IAAMC,CAAA,GAAgBC,CAAA,CAAiB;IACjCC,CAAA,GAASD,CAAA,CAAO;IAChBH,CAAA,GAAWG,CAAA,CAAOE,WAAA,CAAYC,GAAA;IAC9BC,CAAA,GAAUJ,CAAA,CAAO;IACjBK,CAAA,GAAgBC,CAAA,CAAmB;IAAlCC,CAAA,GAAAF,CAAA;IAAKG,CAAA,GAAAH,CAAA;IAENI,CAAA,GAAU,SAAAC,CAAA;MACd,IAAMV,CAAA,GAAIE,WAAA,CAAYC,GAAA;MAItB,IAFAF,CAAA,CAAOU,OAAA,IAAW,GAEdX,CAAA,GAAIH,CAAA,CAASc,OAAA,GAAU,KAAM;QAC/B,IAAML,CAAA,GAAcN,CAAA,GAAIH,CAAA,CAASc,OAAA;UAE3BC,CAAA,GAAaC,IAAA,CAAKC,KAAA,CAAwB,MAAjBb,CAAA,CAAOU,OAAA,GAAkBL,CAAA;QAIxD,IAFAP,CAAA,CAAcY,OAAA,GAAUZ,CAAA,CAAcY,OAAA,CAAQI,MAAA,CAAOH,CAAA,GAEjDN,CAAA,GAAc,MAChB,KAAK,IAAID,CAAA,GAAI,GAAGA,CAAA,KAAMC,CAAA,GAAc,OAAQ,KAAMD,CAAA,IAChDN,CAAA,CAAcY,OAAA,GAAUZ,CAAA,CAAcY,OAAA,CAAQI,MAAA,CAAO;QAIzDhB,CAAA,CAAcY,OAAA,GAAUZ,CAAA,CAAcY,OAAA,CAAQK,KAAA,CAAMH,IAAA,CAAKI,GAAA,CAAIlB,CAAA,CAAcY,OAAA,CAAQO,MAAA,GAASpB,CAAA,EAAa,KAEzGU,CAAA,CAAOT,CAAA,CAAcY,OAAA,GAErBV,CAAA,CAAOU,OAAA,GAAU,GACjBd,CAAA,CAASc,OAAA,GAAUT,WAAA,CAAYC,GAAA;MAAA;MAGjCC,CAAA,CAAQO,OAAA,GAAUQ,qBAAA,CAAsBV,CAAA;IAAA;EAG1CG,CAAA,CAAU;IAGR,OAFAR,CAAA,CAAQO,OAAA,GAAUQ,qBAAA,CAAsBV,CAAA,GAEjC;MACLW,oBAAA,CAAqBhB,CAAA,CAAQO,OAAA;IAAA;EAAA,GAE9B;EAEH,IAAMU,CAAA,IAAUd,CAAA,CAAIe,MAAA,CAAO,UAACxB,CAAA,EAAEE,CAAA;IAAM,OAAAF,CAAA,GAAIE,CAAA;EAAA,GAAG,KAAKO,CAAA,CAAIW,MAAA,EAAQK,OAAA,CAAQ;EAIpE,OAAO;IAACC,GAAA,EAAAjB,CAAA;IAAKkB,MAAA,EAAAJ,CAAA;IAAQK,MAAA,EAHNb,IAAA,CAAKI,GAAA,CAAIU,KAAA,CAAMd,IAAA,CAAKI,GAAA,EAAKV,CAAA;IAGXqB,UAAA,EAFVrB,CAAA,CAAIA,CAAA,CAAIW,MAAA,GAAS;EAAA;AAAA;AAAA,ICnChCd,CAAA,GAAoC,SAAAyB,CAAC7B,CAAA;EAAA,IAACM,CAAA,GAAAN,CAAA,CAAA8B,GAAA;IAAAlB,CAAA,cAAAN,CAAA,GAAM,IAAAA,CAAA;IAAGF,CAAA,GAAAJ,CAAA,CAAA+B,IAAA;IAAA1B,CAAA,cAAAD,CAAA,GAAO,IAAAA,CAAA;IAAGG,CAAA,GAAAP,CAAA,CAAAgC,MAAA;IAAAxB,CAAA,cAAAD,CAAA,GAAS,SAAAA,CAAA;IAAQE,CAAA,GAAAT,CAAA,CAAAiC,KAAA;IAAAZ,CAAA,cAAAZ,CAAA,GAAQ,SAAAA,CAAA;IAAQyB,CAAA,GAAAlC,CAAA,CAAAmC,KAAA;IAAAC,CAAA,cAAAF,CAAA,GAAQ,MAAAA,CAAA;IAAKG,CAAA,GAAArC,CAAA,CAAAsC,MAAA;IAAAC,CAAA,cAAAF,CAAA,GAAS,KAAAA,CAAA;IAC9GG,CAAA,GAAoC3C,CAAA,CAAOgB,IAAA,CAAK4B,KAAA,CAAML,CAAA,GAAQ;IAA7DM,CAAA,GAAAF,CAAA,CAAAhB,GAAA;IAAKmB,CAAA,GAAAH,CAAA,CAAAf,MAAA;IAAQmB,CAAA,GAAAJ,CAAA,CAAAd,MAAA;IAAQmB,CAAA,GAAAL,CAAA,CAAAZ,UAAA;IACtBkB,CAAA,aCX0BhD,CAAA,EAAeE,CAAA,EAAgBM,CAAA,EAAcM,CAAA,EAAgBf,CAAA,EAAiBO,CAAA,EAAeC,CAAA;MA0C7H,OAAO;QAAC0C,YAAA,EAzCahD,CAAA,CAAQ;UAAM;YACjCiD,MAAA,EAAQ;YACRC,QAAA,EAAU;YACVd,KAAA,EAAOrC,CAAA,GAAQ,IAAI;YACnBwC,MAAA,EAAQtC,CAAA,GAAS,KAAK;YACtBkD,OAAA,EAAS;YACTC,eAAA,EAAiB;YACjBC,KAAA,EAAO;YACPC,QAAA,EAAU;YACVC,UAAA,EAAY;YACZC,UAAA,EAAY;YACZC,UAAA,EAAY;YACZC,SAAA,EAAW;YACX3B,GAAA,EAAAxB,CAAA;YACA2B,KAAA,EAAArB,CAAA;YACAoB,MAAA,EAAAnC,CAAA;YACAkC,IAAA,EAAA3B;UAAA;QAAA,GACE,CAACN,CAAA,EAAOE,CAAA,EAAQM,CAAA,EAAKM,CAAA,EAAOf,CAAA,EAAQO,CAAA;QAwBlBsD,UAAA,EAtBH3D,CAAA,CAAQ;UAAM;YAC/BkD,QAAA,EAAU;YACVlB,IAAA,EAAM;YACNE,KAAA,EAAO;YACPD,MAAA,EAAQ;YACRM,MAAA,EAAAtC,CAAA;YACAmD,eAAA,EAAiB;YACjBQ,YAAA,EAAc;YACdF,SAAA,EAAW;UAAA;QAAA,GACT,CAACzD,CAAA;QAa6B4D,QAAA,EAXjB3D,CAAA,CAAY,UAACH,CAAA,EAAYE,CAAA;UAAM;YAC9CiD,QAAA,EAAU;YACVjB,MAAA,EAAQ;YACRC,KAAA,EAA8B,KAArB5B,CAAA,GAAY,IAAIL,CAAA,IAAU;YACnCsC,MAAA,EAAQxC,CAAA,GAAa;YACrBqC,KAAA,EAAO;YACPgB,eAAA,EAAiB;YACjBQ,YAAA,EAAc;YACdF,SAAA,EAAW;UAAA;QAAA,GACT,CAACpD,CAAA;MAAA;IAAA,CD7BwC,CAAU+B,CAAA,EAAOG,CAAA,EAAQ3B,CAAA,EAAKS,CAAA,EAAOb,CAAA,EAAQH,CAAA,EAAMqC,CAAA,CAAIxB,MAAA;IAA7F2C,CAAA,GAAAf,CAAA,CAAAY,UAAA;IAAYI,CAAA,GAAAhB,CAAA,CAAAc,QAAA;IAAUG,CAAA,GAAAjB,CAAA,CAAAC,YAAA;EAE7B,OAEEjD,CAAA,CAAAkE,aAAA;IAAKC,KAAA,EAAOF;EAAA,GACVjE,CAAA,CAAAkE,aAAA,eAAOnB,CAAA,YAAkBF,CAAA,YAEzB7C,CAAA,CAAAkE,aAAA;IAAKC,KAAA,EAAOJ;EAAA,GACTnB,CAAA,CAAIwB,GAAA,CAAI,UAAClE,CAAA,EAAKM,CAAA;IAAM,OAEnBR,CAAA,CAAAkE,aAAA;MAAKG,GAAA,EAAK7D,CAAA;MAAG2D,KAAA,EAAOH,CAAA,CAAUvB,CAAA,GAASvC,CAAA,GAAO4C,CAAA,EAAQtC,CAAA;IAAA;EAAA;AAAA;AAAA,SAAAF,CAAA,IAAAyB,OAAA,EAAAhC,CAAA,IAAAuE,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}