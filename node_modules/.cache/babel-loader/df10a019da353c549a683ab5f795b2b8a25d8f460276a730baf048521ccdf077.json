{"ast":null,"code":"var _jsxFileName = \"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport './styles.css';\n// import { drawLandmarks } from '@mediapipe/drawing_utils';\n// import {\n//   drawConnectors,\n//   drawLandmarks,\n// } from '@mediapipe/drawing_utils/drawing_utils';\n// import {\n//   ControlPanel,\n//   FPS,\n//   StaticText,\n//   Slider,\n//   Toggle\n// } from '@mediapipe/control_utils/control_utils';\nimport { Objectron } from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n\n// import \n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntestSupport([{\n  client: 'Chrome'\n}]);\nfunction testSupport(supportedDevices) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` + `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n// const fpsControl = new controls.FPS();\n\nfunction App() {\n  const controls = window;\n  const drawingUtils = window;\n  const mpObjectron = window;\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const controlsElement = document.getElementsByClassName('control-panel')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n\n  // function onResults(results: mpObjectron.Results): void {\n  //   // Hide the spinner.\n  //   document.body.classList.add('loaded');\n\n  //   console.log(results.image);\n  //   // Update the frame rate.\n  //   // fpsControl.tick();\n\n  //   // Draw the overlays.\n  //   canvasCtx.save();\n  //   canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n  //   if (!!results.objectDetections) {\n  //     for (const detectedObject of results.objectDetections) {\n  //       // Reformat keypoint information as landmarks, for easy drawing.\n  //       console.log(detectedObject);\n  //       // const landmarks:mpObjectron.Results =\n  //       //     detectedObject.keypoints.map(x => x.point2d);\n  //       // Draw bounding box.\n  //       // drawingUtils.drawConnectors(canvasCtx, landmarks,\n  //       //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n\n  //       // Draw Axes\n  //       // drawAxes(canvasCtx, landmarks, {\n  //       //   x: '#00FF00',\n  //       //   y: '#FF0000',\n  //       //   z: '#0000FF',\n  //       // });\n  //       // Draw centroid.\n  //       // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n  //     }\n  //   }\n  //   canvasCtx.restore();\n  // }\n\n  function onResults(results) {\n    console.log(results);\n    canvasCtx.save();\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        console.log(detectedObject);\n        // Reformat keypoint information as landmarks, for easy drawing.\n        // const landmarks: mpObjectron.Point2D[] =\n        //     detectedObject.keypoints.map(x => x.point2d);\n        // Draw bounding box.\n        // drawingUtils.drawConnectors(canvasCtx, landmarks,\n        //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n        // Draw centroid.\n        // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n      }\n    }\n\n    canvasCtx.restore();\n  }\n\n  // const config = {locateFile: (file: File) => {\n  //   return `./object_detection_3d_sneakers.tflite`;\n  // }};\n  // const objectron = new Objectron({locateFile: (file) => {\n  //   return './object_detection_3d_sneakers.tflite';\n  // }});\n\n  const objectron = new Objectron({\n    locateFile: file => {\n      // return `./object_detection_3d_sneakers.tflite`;\n      return `objectron/${file}`;\n    }\n  });\n\n  // const objectron = new mpObjectron.Objectron(config);\n\n  objectron.setOptions({\n    modelName: 'Shoe',\n    maxNumObjects: 3\n  });\n  objectron.onResults(onResults);\n  const camera = new Camera(videoElement, {\n    onFrame: async () => {\n      await objectron.send({\n        image: videoElement\n      });\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n  // ###############################################################\n\n  new controls.ControlPanel(controlsElement, {\n    selfieMode: false,\n    modelName: 'Shoe',\n    maxNumObjects: 5,\n    minDetectionConfidence: 0.5,\n    minTrackingConfidence: 0.99\n  }).add([new controls.StaticText({\n    title: 'MediaPipe Objectron'\n  }), fpsControl, new controls.SourcePicker({\n    onSourceChanged: (name, type) => {\n      objectron.setOptions({\n        staticImageMode: type !== 'image'\n      });\n      objectron.reset();\n    },\n    onFrame: async (input, size) => {\n      const aspect = size.height / size.width;\n      let width, height;\n      if (window.innerWidth > window.innerHeight) {\n        height = window.innerHeight;\n        width = height / aspect;\n      } else {\n        width = window.innerWidth;\n        height = width * aspect;\n      }\n      canvasElement.width = width;\n      canvasElement.height = height;\n      await objectron.send({\n        image: input\n      });\n    },\n    examples\n  }), new controls.Toggle({\n    title: 'Selfie Mode',\n    field: 'selfieMode'\n  }), new controls.DropDownControl({\n    title: 'Model',\n    field: 'modelName',\n    options: [{\n      name: 'Shoe',\n      value: 'Shoe'\n    }, {\n      name: 'Camera',\n      value: 'Camera'\n    }, {\n      name: 'Chair',\n      value: 'Chair'\n    }, {\n      name: 'Cup',\n      value: 'Cup'\n    }]\n  }), new controls.Slider({\n    title: 'Max Num Objects',\n    field: 'maxNumObjects',\n    range: [1, 10],\n    step: 1\n  }), new controls.Slider({\n    title: 'Min Detection Confidence',\n    field: 'minDetectionConfidence',\n    range: [0, 1],\n    step: 0.01\n  }), new controls.Slider({\n    title: 'Min Tracking Confidence',\n    field: 'minTrackingConfidence',\n    range: [0, 1],\n    step: 0.01\n  })]).on(x => {\n    const options = x;\n    videoElement.classList.toggle('selfie', options.selfieMode);\n    objectron.setOptions(options);\n  });\n\n  // ###############################################################\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"22\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Objectron","Camera","DeviceDetector","jsxDEV","_jsxDEV","testSupport","client","supportedDevices","deviceDetector","detectedDevice","parse","navigator","userAgent","isSupported","device","undefined","re","RegExp","test","name","os","alert","App","controls","window","drawingUtils","mpObjectron","videoElement","document","getElementsByClassName","canvasElement","controlsElement","canvasCtx","getContext","onResults","results","console","log","save","drawImage","image","width","height","objectDetections","detectedObject","restore","objectron","locateFile","file","setOptions","modelName","maxNumObjects","camera","onFrame","send","start","ControlPanel","selfieMode","minDetectionConfidence","minTrackingConfidence","add","StaticText","title","fpsControl","SourcePicker","onSourceChanged","type","staticImageMode","reset","input","size","aspect","innerWidth","innerHeight","examples","Toggle","field","DropDownControl","options","value","Slider","range","step","on","x","classList","toggle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles.css';\n// import { drawLandmarks } from '@mediapipe/drawing_utils';\n// import {\n//   drawConnectors,\n//   drawLandmarks,\n// } from '@mediapipe/drawing_utils/drawing_utils';\n// import {\n//   ControlPanel,\n//   FPS,\n//   StaticText,\n//   Slider,\n//   Toggle\n// } from '@mediapipe/control_utils/control_utils';\nimport { Objectron } from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n\n// import \n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n          `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\n\n// const fpsControl = new controls.FPS();\n\n\nfunction App() {\n\n  const controls = window;\n  const drawingUtils = window;\n  const mpObjectron = window;\n\n  \n\n  const videoElement =\n    document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  const canvasElement =\n    document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  const controlsElement =\n    document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  const canvasCtx = canvasElement.getContext('2d')!;\n\n    \n\n    // function onResults(results: mpObjectron.Results): void {\n    //   // Hide the spinner.\n    //   document.body.classList.add('loaded');\n    \n    //   console.log(results.image);\n    //   // Update the frame rate.\n    //   // fpsControl.tick();\n    \n    //   // Draw the overlays.\n    //   canvasCtx.save();\n    //   canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    //   if (!!results.objectDetections) {\n    //     for (const detectedObject of results.objectDetections) {\n    //       // Reformat keypoint information as landmarks, for easy drawing.\n    //       console.log(detectedObject);\n    //       // const landmarks:mpObjectron.Results =\n    //       //     detectedObject.keypoints.map(x => x.point2d);\n    //       // Draw bounding box.\n    //       // drawingUtils.drawConnectors(canvasCtx, landmarks,\n    //       //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n    \n    //       // Draw Axes\n    //       // drawAxes(canvasCtx, landmarks, {\n    //       //   x: '#00FF00',\n    //       //   y: '#FF0000',\n    //       //   z: '#0000FF',\n    //       // });\n    //       // Draw centroid.\n    //       // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n    //     }\n    //   }\n    //   canvasCtx.restore();\n    // }\n\n\n    function onResults(results: any) {\n      console.log(results);\n      canvasCtx.save();\n      canvasCtx.drawImage(\n          results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (!!results.objectDetections) {\n        for (const detectedObject of results.objectDetections) {\n          console.log(detectedObject);\n          // Reformat keypoint information as landmarks, for easy drawing.\n          // const landmarks: mpObjectron.Point2D[] =\n          //     detectedObject.keypoints.map(x => x.point2d);\n          // Draw bounding box.\n          // drawingUtils.drawConnectors(canvasCtx, landmarks,\n          //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n          // Draw centroid.\n          // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n        }\n      }\n      canvasCtx.restore();\n    }\n\n\n    // const config = {locateFile: (file: File) => {\n    //   return `./object_detection_3d_sneakers.tflite`;\n    // }};\n    // const objectron = new Objectron({locateFile: (file) => {\n    //   return './object_detection_3d_sneakers.tflite';\n    // }});\n    \n    const objectron = new Objectron({locateFile: (file) => {\n      // return `./object_detection_3d_sneakers.tflite`;\n      return `objectron/${file}`;\n    }});\n\n    // const objectron = new mpObjectron.Objectron(config);\n\n    objectron.setOptions({\n      modelName: 'Shoe',\n      maxNumObjects: 3,\n    });\n    objectron.onResults(onResults);\n    \n    const camera = new Camera(videoElement, {\n      onFrame: async () => {\n        await objectron.send({image: videoElement});\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n// ###############################################################\n\nnew controls\n.ControlPanel(controlsElement, {\n  selfieMode: false,\n  modelName: 'Shoe',\n  maxNumObjects: 5,\n  minDetectionConfidence: 0.5,\n  minTrackingConfidence: 0.99,\n})\n.add([\n  new controls.StaticText({title: 'MediaPipe Objectron'}),\n  fpsControl,\n  new controls.SourcePicker({\n    onSourceChanged: (name, type) => {\n      objectron.setOptions({staticImageMode: type !== 'image'});\n      objectron.reset();\n    },\n    onFrame:\n        async (input: controls.InputImage, size: controls.Rectangle) => {\n          const aspect = size.height / size.width;\n          let width: number, height: number;\n          if (window.innerWidth > window.innerHeight) {\n            height = window.innerHeight;\n            width = height / aspect;\n          } else {\n            width = window.innerWidth;\n            height = width * aspect;\n          }\n          canvasElement.width = width;\n          canvasElement.height = height;\n          await objectron.send({image: input});\n        },\n    examples,\n  }),\n  new controls.Toggle({title: 'Selfie Mode', field: 'selfieMode'}),\n  new controls.DropDownControl({\n    title: 'Model',\n    field: 'modelName',\n    options: [\n      {\n        name: 'Shoe',\n        value: 'Shoe',\n      },\n      {\n        name: 'Camera',\n        value: 'Camera',\n      },\n      {\n        name: 'Chair',\n        value: 'Chair',\n      },\n      {\n        name: 'Cup',\n        value: 'Cup',\n      },\n    ]\n  }),\n  new controls.Slider({\n    title: 'Max Num Objects',\n    field: 'maxNumObjects',\n    range: [1, 10],\n    step: 1,\n  }),\n  new controls.Slider({\n    title: 'Min Detection Confidence',\n    field: 'minDetectionConfidence',\n    range: [0, 1],\n    step: 0.01\n  }),\n  new controls.Slider({\n    title: 'Min Tracking Confidence',\n    field: 'minTrackingConfidence',\n    range: [0, 1],\n    step: 0.01\n  }),\n])\n.on(x => {\n  const options = x as mpObjectron.Options;\n  videoElement.classList.toggle('selfie', options.selfieMode);\n  objectron.setOptions(options);\n});\n\n\n\n// ###############################################################\n  return (\n    <div className=\"App\">\n      {/* <div className=\"container\">\n        <video className=\"input_video\"></video>\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n\n22\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}