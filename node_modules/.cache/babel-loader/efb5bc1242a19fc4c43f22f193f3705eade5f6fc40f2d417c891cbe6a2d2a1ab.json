{"ast":null,"code":"var _jsxFileName = \"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport './styles.css';\n// import { drawLandmarks } from '@mediapipe/drawing_utils';\n\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n\n// import \n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntestSupport([{\n  client: 'Chrome'\n}]);\nfunction testSupport(supportedDevices) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` + `is not well supported at this time, continue at your own risk.`);\n  }\n}\nconst controls = window;\nconst drawingUtils = window;\nconst mpObjectron = window;\n// const fpsControl = new controls.FPS();\n\nfunction App() {\n  // const config = {locateFile: () => {\n  //   return `./object_detection_3d_sneakers.tflite`;\n  // }};\n  const objectron = new mpObjectron.Objectron(`./object_detection_3d_sneakers.tflite`);\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const controlsElement = document.getElementsByClassName('control-panel')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n  function onResults(results) {\n    // Hide the spinner.\n    document.body.classList.add('loaded');\n    console.log(results.image);\n    // Update the frame rate.\n    // fpsControl.tick();\n\n    // Draw the overlays.\n    canvasCtx.save();\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        // Reformat keypoint information as landmarks, for easy drawing.\n        console.log(detectedObject);\n        // const landmarks:mpObjectron.Results =\n        //     detectedObject.keypoints.map(x => x.point2d);\n        // Draw bounding box.\n        // drawingUtils.drawConnectors(canvasCtx, landmarks,\n        //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n\n        // Draw Axes\n        // drawAxes(canvasCtx, landmarks, {\n        //   x: '#00FF00',\n        //   y: '#FF0000',\n        //   z: '#0000FF',\n        // });\n        // Draw centroid.\n        // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n      }\n    }\n\n    canvasCtx.restore();\n  }\n\n  // const objectron = new Objectron({locateFile: (file: any) => {\n  //   // return `./object_detection_3d_sneakers.tflite`;\n  //   return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n  // }});\n\n  // const objectron = new mpObjectron.Objectron(config);\n\n  objectron.setOptions({\n    modelName: 'Cup',\n    maxNumObjects: 3\n  });\n  objectron.onResults(onResults);\n  const camera = new Camera(videoElement, {\n    onFrame: async () => {\n      await objectron.send({\n        image: videoElement\n      });\n    },\n    width: 1280,\n    height: 720\n  });\n  camera.start();\n  // ###############################################################\n\n  // ###############################################################\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Camera","DeviceDetector","jsxDEV","_jsxDEV","testSupport","client","supportedDevices","deviceDetector","detectedDevice","parse","navigator","userAgent","isSupported","device","undefined","re","RegExp","test","name","os","alert","controls","window","drawingUtils","mpObjectron","App","objectron","Objectron","videoElement","document","getElementsByClassName","canvasElement","controlsElement","canvasCtx","getContext","onResults","results","body","classList","add","console","log","image","save","drawImage","width","height","objectDetections","detectedObject","restore","setOptions","modelName","maxNumObjects","camera","onFrame","send","start","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles.css';\n// import { drawLandmarks } from '@mediapipe/drawing_utils';\nimport { Objectron } from '@mediapipe/objectron';\nimport { Camera } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n\n// import \n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n          `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\nconst controls = window;\nconst drawingUtils = window;\nconst mpObjectron = window;\n// const fpsControl = new controls.FPS();\n\n\nfunction App() {\n  // const config = {locateFile: () => {\n  //   return `./object_detection_3d_sneakers.tflite`;\n  // }};\n  const objectron = new mpObjectron.Objectron(`./object_detection_3d_sneakers.tflite`);\n\n  const videoElement =\n    document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  const canvasElement =\n    document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  const controlsElement =\n    document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  const canvasCtx = canvasElement.getContext('2d')!;\n\n    \n\n    function onResults(results: mpObjectron.Results): void {\n      // Hide the spinner.\n      document.body.classList.add('loaded');\n    \n      console.log(results.image);\n      // Update the frame rate.\n      // fpsControl.tick();\n    \n      // Draw the overlays.\n      canvasCtx.save();\n      canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n      if (!!results.objectDetections) {\n        for (const detectedObject of results.objectDetections) {\n          // Reformat keypoint information as landmarks, for easy drawing.\n          console.log(detectedObject);\n          // const landmarks:mpObjectron.Results =\n          //     detectedObject.keypoints.map(x => x.point2d);\n          // Draw bounding box.\n          // drawingUtils.drawConnectors(canvasCtx, landmarks,\n          //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n    \n          // Draw Axes\n          // drawAxes(canvasCtx, landmarks, {\n          //   x: '#00FF00',\n          //   y: '#FF0000',\n          //   z: '#0000FF',\n          // });\n          // Draw centroid.\n          // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n        }\n      }\n      canvasCtx.restore();\n    }\n\n\n    \n    // const objectron = new Objectron({locateFile: (file: any) => {\n    //   // return `./object_detection_3d_sneakers.tflite`;\n    //   return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n    // }});\n\n    // const objectron = new mpObjectron.Objectron(config);\n\n    objectron.setOptions({\n      modelName: 'Cup',\n      maxNumObjects: 3,\n    });\n    objectron.onResults(onResults);\n    \n    const camera = new Camera(videoElement, {\n      onFrame: async () => {\n        await objectron.send({image: videoElement});\n      },\n      width: 1280,\n      height: 720\n    });\n    camera.start();\n// ###############################################################\n\n\n\n\n\n// ###############################################################\n  return (\n    <div className=\"App\">\n      {/* <div className=\"container\">\n        <video className=\"input_video\"></video>\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}