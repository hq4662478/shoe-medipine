{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst bots_json_1 = __importDefault(require(\"../../fixtures/regexes/bots.json\"));\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass BotParser {\n  constructor() {\n    this.parse = userAgent => {\n      var _a, _b, _c, _d;\n      for (const bot of bots_json_1.default) {\n        const match = user_agent_1.userAgentParser(bot.regex, userAgent);\n        if (!match) continue;\n        return {\n          name: bot.name,\n          category: bot.category || \"\",\n          url: bot.url || \"\",\n          producer: {\n            name: ((_b = (_a = bot) === null || _a === void 0 ? void 0 : _a.producer) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n            url: ((_d = (_c = bot) === null || _c === void 0 ? void 0 : _c.producer) === null || _d === void 0 ? void 0 : _d.url) || \"\"\n          }\n        };\n      }\n      return null;\n    };\n  }\n}\nmodule.exports = BotParser;","map":{"version":3,"names":["__importDefault","mod","__esModule","bots_json_1","require","user_agent_1","BotParser","constructor","parse","userAgent","_a","_b","_c","_d","bot","default","match","userAgentParser","regex","name","category","url","producer","module","exports"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/device-detector-js/dist/parsers/bot/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst bots_json_1 = __importDefault(require(\"../../fixtures/regexes/bots.json\"));\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass BotParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            var _a, _b, _c, _d;\n            for (const bot of bots_json_1.default) {\n                const match = user_agent_1.userAgentParser(bot.regex, userAgent);\n                if (!match)\n                    continue;\n                return {\n                    name: bot.name,\n                    category: bot.category || \"\",\n                    url: bot.url || \"\",\n                    producer: {\n                        name: ((_b = (_a = bot) === null || _a === void 0 ? void 0 : _a.producer) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n                        url: ((_d = (_c = bot) === null || _c === void 0 ? void 0 : _c.producer) === null || _d === void 0 ? void 0 : _d.url) || \"\"\n                    }\n                };\n            }\n            return null;\n        };\n    }\n}\nmodule.exports = BotParser;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACD,MAAME,WAAW,GAAGH,eAAe,CAACI,OAAO,CAAC,kCAAkC,CAAC,CAAC;AAChF,MAAMC,YAAY,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AACtD,MAAME,SAAS,CAAC;EACZC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAIC,SAAS,IAAK;MACxB,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;MAClB,KAAK,MAAMC,GAAG,IAAIX,WAAW,CAACY,OAAO,EAAE;QACnC,MAAMC,KAAK,GAAGX,YAAY,CAACY,eAAe,CAACH,GAAG,CAACI,KAAK,EAAET,SAAS,CAAC;QAChE,IAAI,CAACO,KAAK,EACN;QACJ,OAAO;UACHG,IAAI,EAAEL,GAAG,CAACK,IAAI;UACdC,QAAQ,EAAEN,GAAG,CAACM,QAAQ,IAAI,EAAE;UAC5BC,GAAG,EAAEP,GAAG,CAACO,GAAG,IAAI,EAAE;UAClBC,QAAQ,EAAE;YACNH,IAAI,EAAE,CAAC,CAACR,EAAE,GAAG,CAACD,EAAE,GAAGI,GAAG,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,QAAQ,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,IAAI,KAAK,EAAE;YAC7HE,GAAG,EAAE,CAAC,CAACR,EAAE,GAAG,CAACD,EAAE,GAAGE,GAAG,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,QAAQ,MAAM,IAAI,IAAIT,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,GAAG,KAAK;UAC7H;QACJ,CAAC;MACL;MACA,OAAO,IAAI;IACf,CAAC;EACL;AACJ;AACAE,MAAM,CAACC,OAAO,GAAGlB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}