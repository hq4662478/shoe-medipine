{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst notebooks_json_1 = __importDefault(require(\"../../fixtures/regexes/device/notebooks.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nclass NotebooksParser {\n  constructor() {\n    this.parse = userAgent => {\n      const result = {\n        type: \"\",\n        brand: \"\",\n        model: \"\"\n      };\n      if (!user_agent_1.userAgentParser(\"FBMD/\", userAgent)) {\n        return result;\n      }\n      for (const [brand, notebook] of Object.entries(notebooks_json_1.default)) {\n        const match = user_agent_1.userAgentParser(notebook.regex, userAgent);\n        if (!match) continue;\n        result.type = \"desktop\";\n        result.brand = brand;\n        if (\"model\" in notebook && notebook.model) {\n          result.model = model_1.buildModel(variable_replacement_1.variableReplacement(notebook.model, match)).trim();\n        } else if (\"models\" in notebook && notebook.models) {\n          for (const model of notebook.models) {\n            const match = user_agent_1.userAgentParser(model.regex, userAgent);\n            if (!match) continue;\n            result.model = variable_replacement_1.variableReplacement(model.model, match).trim();\n          }\n        }\n        break;\n      }\n      return result;\n    };\n  }\n}\nexports.default = NotebooksParser;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","notebooks_json_1","require","variable_replacement_1","user_agent_1","model_1","NotebooksParser","constructor","parse","userAgent","result","type","brand","model","userAgentParser","notebook","entries","default","match","regex","buildModel","variableReplacement","trim","models"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/node_modules/device-detector-js/dist/parsers/device/notebooks.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst notebooks_json_1 = __importDefault(require(\"../../fixtures/regexes/device/notebooks.json\"));\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nconst model_1 = require(\"../../utils/model\");\nclass NotebooksParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                brand: \"\",\n                model: \"\"\n            };\n            if (!user_agent_1.userAgentParser(\"FBMD/\", userAgent)) {\n                return result;\n            }\n            for (const [brand, notebook] of Object.entries(notebooks_json_1.default)) {\n                const match = user_agent_1.userAgentParser(notebook.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"desktop\";\n                result.brand = brand;\n                if (\"model\" in notebook && notebook.model) {\n                    result.model = model_1.buildModel(variable_replacement_1.variableReplacement(notebook.model, match)).trim();\n                }\n                else if (\"models\" in notebook && notebook.models) {\n                    for (const model of notebook.models) {\n                        const match = user_agent_1.userAgentParser(model.regex, userAgent);\n                        if (!match)\n                            continue;\n                        result.model = variable_replacement_1.variableReplacement(model.model, match).trim();\n                    }\n                }\n                break;\n            }\n            return result;\n        };\n    }\n}\nexports.default = NotebooksParser;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,gBAAgB,GAAGP,eAAe,CAACQ,OAAO,CAAC,8CAA8C,CAAC,CAAC;AACjG,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAC1E,MAAME,YAAY,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACtD,MAAMG,OAAO,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC5C,MAAMI,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAIC,SAAS,IAAK;MACxB,MAAMC,MAAM,GAAG;QACXC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACX,CAAC;MACD,IAAI,CAACT,YAAY,CAACU,eAAe,CAAC,OAAO,EAAEL,SAAS,CAAC,EAAE;QACnD,OAAOC,MAAM;MACjB;MACA,KAAK,MAAM,CAACE,KAAK,EAAEG,QAAQ,CAAC,IAAIlB,MAAM,CAACmB,OAAO,CAACf,gBAAgB,CAACgB,OAAO,CAAC,EAAE;QACtE,MAAMC,KAAK,GAAGd,YAAY,CAACU,eAAe,CAACC,QAAQ,CAACI,KAAK,EAAEV,SAAS,CAAC;QACrE,IAAI,CAACS,KAAK,EACN;QACJR,MAAM,CAACC,IAAI,GAAG,SAAS;QACvBD,MAAM,CAACE,KAAK,GAAGA,KAAK;QACpB,IAAI,OAAO,IAAIG,QAAQ,IAAIA,QAAQ,CAACF,KAAK,EAAE;UACvCH,MAAM,CAACG,KAAK,GAAGR,OAAO,CAACe,UAAU,CAACjB,sBAAsB,CAACkB,mBAAmB,CAACN,QAAQ,CAACF,KAAK,EAAEK,KAAK,CAAC,CAAC,CAACI,IAAI,EAAE;QAC/G,CAAC,MACI,IAAI,QAAQ,IAAIP,QAAQ,IAAIA,QAAQ,CAACQ,MAAM,EAAE;UAC9C,KAAK,MAAMV,KAAK,IAAIE,QAAQ,CAACQ,MAAM,EAAE;YACjC,MAAML,KAAK,GAAGd,YAAY,CAACU,eAAe,CAACD,KAAK,CAACM,KAAK,EAAEV,SAAS,CAAC;YAClE,IAAI,CAACS,KAAK,EACN;YACJR,MAAM,CAACG,KAAK,GAAGV,sBAAsB,CAACkB,mBAAmB,CAACR,KAAK,CAACA,KAAK,EAAEK,KAAK,CAAC,CAACI,IAAI,EAAE;UACxF;QACJ;QACA;MACJ;MACA,OAAOZ,MAAM;IACjB,CAAC;EACL;AACJ;AACAX,OAAO,CAACkB,OAAO,GAAGX,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}