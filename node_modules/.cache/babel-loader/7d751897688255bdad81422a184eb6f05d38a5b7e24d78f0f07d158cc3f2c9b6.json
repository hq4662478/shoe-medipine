{"ast":null,"code":"var _jsxFileName = \"/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport './styles.css';\n// import { drawLandmarks } from '@mediapipe/drawing_utils';\n\nimport DeviceDetector from \"device-detector-js\";\n\n// import \n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntestSupport([{\n  client: 'Chrome'\n}]);\nfunction testSupport(supportedDevices) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` + `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n// const controls = window;\n// const drawingUtils = window;\n// const mpObjectron = window;\n// // const fpsControl = new controls.FPS();\n// const config = {locateFile: () => {\n//   return `./object_detection_3d_sneakers.tflite`;\n// }};\n\nfunction App() {\n  //   const videoElement =\n  //     document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n  //   const canvasElement =\n  //     document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n  //   const controlsElement =\n  //     document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n  //   const canvasCtx = canvasElement.getContext('2d')!;\n\n  //     function onResults(results: mpObjectron.Results): void {\n  //       // Hide the spinner.\n  //       document.body.classList.add('loaded');\n\n  //       console.log(results.image);\n  //       // Update the frame rate.\n  //       // fpsControl.tick();\n\n  //       // Draw the overlays.\n  //       canvasCtx.save();\n  //       canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n  //       if (!!results.objectDetections) {\n  //         for (const detectedObject of results.objectDetections) {\n  //           // Reformat keypoint information as landmarks, for easy drawing.\n  //           console.log(detectedObject);\n  //           // const landmarks:mpObjectron.Results =\n  //           //     detectedObject.keypoints.map(x => x.point2d);\n  //           // Draw bounding box.\n  //           // drawingUtils.drawConnectors(canvasCtx, landmarks,\n  //           //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n\n  //           // Draw Axes\n  //           // drawAxes(canvasCtx, landmarks, {\n  //           //   x: '#00FF00',\n  //           //   y: '#FF0000',\n  //           //   z: '#0000FF',\n  //           // });\n  //           // Draw centroid.\n  //           // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n  //         }\n  //       }\n  //       canvasCtx.restore();\n  //     }\n\n  //     // const objectron = new Objectron({locateFile: (file: any) => {\n  //     //   // return `./object_detection_3d_sneakers.tflite`;\n  //     //   return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n  //     // }});\n\n  //     const objectron = new mpObjectron.Objectron(config);\n\n  //     objectron.setOptions({\n  //       modelName: 'Cup',\n  //       maxNumObjects: 3,\n  //     });\n  //     objectron.onResults(onResults);\n\n  //     const camera = new Camera(videoElement, {\n  //       onFrame: async () => {\n  //         await objectron.send({image: videoElement});\n  //       },\n  //       width: 1280,\n  //       height: 720\n  //     });\n  //     camera.start();\n  // ###############################################################\n\n  const controls = window;\n  const drawingUtils = window;\n  const mpObjectron = window;\n  const config = {\n    locateFile: file => {\n      return `https://cdn.jsdelivr.net/npm/@ @0.3.1627447724/${file}`;\n    }\n  };\n  const examples = {\n    images: [{\n      name: 'Camera image',\n      src: 'https://assets.codepen.io/5409376/camera.jpg'\n    }, {\n      name: 'Chair image',\n      src: 'https://assets.codepen.io/5409376/chair.jpg'\n    }, {\n      name: 'Cup image',\n      src: 'https://assets.codepen.io/5409376/cup.jpg'\n    }, {\n      name: 'Shoe image',\n      src: 'https://assets.codepen.io/5409376/shoe.jpg'\n    }],\n    videos: [{\n      name: 'Camera video',\n      src: 'https://assets.codepen.io/5409376/camera_3_8.mp4'\n    }, {\n      name: 'Chair video',\n      src: 'https://assets.codepen.io/5409376/chair_10_1.mp4'\n    }, {\n      name: 'Cup video',\n      src: 'https://assets.codepen.io/5409376/cup_43_42.mp4'\n    }, {\n      name: 'Shoe video',\n      src: 'https://assets.codepen.io/5409376/shoe_1063642984-sd-trim-short.mov'\n    }]\n  };\n\n  // Our input frames will come from here.\n  const videoElement = document.getElementsByClassName('input_video')[0];\n  const canvasElement = document.getElementsByClassName('output_canvas')[0];\n  const controlsElement = document.getElementsByClassName('control-panel')[0];\n  const canvasCtx = canvasElement.getContext('2d');\n\n  // We'll add this to our control panel later, but we'll save it here so we can\n  // call tick() each time the graph runs.\n  const fpsControl = new controls.FPS();\n\n  // Optimization: Turn off animated spinner after its hiding animation is done.\n  const spinner = document.querySelector('.loading');\n  spinner.ontransitionend = () => {\n    spinner.style.display = 'none';\n  };\n  function onResults(results) {\n    // Hide the spinner.\n    document.body.classList.add('loaded');\n\n    // Update the frame rate.\n    fpsControl.tick();\n\n    // Draw the overlays.\n    canvasCtx.save();\n    canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n    if (!!results.objectDetections) {\n      for (const detectedObject of results.objectDetections) {\n        // Reformat keypoint information as landmarks, for easy drawing.\n        const landmarks = detectedObject.keypoints.map(x => x.point2d);\n        // Draw bounding box.\n        drawingUtils.drawConnectors(canvasCtx, landmarks, mpObjectron.BOX_CONNECTIONS, {\n          color: '#FF0000'\n        });\n\n        // Draw Axes\n        drawAxes(canvasCtx, landmarks, {\n          x: '#00FF00',\n          y: '#FF0000',\n          z: '#0000FF'\n        });\n        // Draw centroid.\n        drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {\n          color: '#FFFFFF'\n        });\n      }\n    }\n    canvasCtx.restore();\n  }\n  const objectron = new mpObjectron.Objectron(config);\n  objectron.onResults(onResults);\n\n  // Present a control panel through which the user can manipulate the solution\n  // options.\n  new controls.ControlPanel(controlsElement, {\n    selfieMode: false,\n    modelName: 'Shoe',\n    maxNumObjects: 5,\n    minDetectionConfidence: 0.5,\n    minTrackingConfidence: 0.99\n  }).add([new controls.StaticText({\n    title: 'MediaPipe Objectron'\n  }), fpsControl, new controls.SourcePicker({\n    onSourceChanged: (name, type) => {\n      objectron.setOptions({\n        staticImageMode: type !== 'image'\n      });\n      objectron.reset();\n    },\n    onFrame: async (input, size) => {\n      const aspect = size.height / size.width;\n      let width, height;\n      if (window.innerWidth > window.innerHeight) {\n        height = window.innerHeight;\n        width = height / aspect;\n      } else {\n        width = window.innerWidth;\n        height = width * aspect;\n      }\n      canvasElement.width = width;\n      canvasElement.height = height;\n      await objectron.send({\n        image: input\n      });\n    },\n    examples\n  }), new controls.Toggle({\n    title: 'Selfie Mode',\n    field: 'selfieMode'\n  }), new controls.DropDownControl({\n    title: 'Model',\n    field: 'modelName',\n    options: [{\n      name: 'Shoe',\n      value: 'Shoe'\n    }, {\n      name: 'Camera',\n      value: 'Camera'\n    }, {\n      name: 'Chair',\n      value: 'Chair'\n    }, {\n      name: 'Cup',\n      value: 'Cup'\n    }]\n  }), new controls.Slider({\n    title: 'Max Num Objects',\n    field: 'maxNumObjects',\n    range: [1, 10],\n    step: 1\n  }), new controls.Slider({\n    title: 'Min Detection Confidence',\n    field: 'minDetectionConfidence',\n    range: [0, 1],\n    step: 0.01\n  }), new controls.Slider({\n    title: 'Min Tracking Confidence',\n    field: 'minTrackingConfidence',\n    range: [0, 1],\n    step: 0.01\n  })]).on(x => {\n    const options = x;\n    videoElement.classList.toggle('selfie', options.selfieMode);\n    objectron.setOptions(options);\n  });\n  function drawAxes(canvasCtx, landmarks, color) {\n    const {\n      BACK_BOTTOM_RIGHT,\n      BACK_TOP_LEFT,\n      BACK_TOP_RIGHT,\n      FRONT_BOTTOM_LEFT,\n      FRONT_BOTTOM_RIGHT,\n      FRONT_TOP_RIGHT,\n      FRONT_TOP_LEFT,\n      CENTER\n    } = mpObjectron.BOX_KEYPOINTS;\n    const xMidPoint = lineIntersection([landmarks[BACK_BOTTOM_RIGHT], landmarks[FRONT_TOP_RIGHT]], [landmarks[BACK_TOP_RIGHT], landmarks[FRONT_BOTTOM_RIGHT]]);\n    const yMidPoint = lineIntersection([landmarks[BACK_TOP_LEFT], landmarks[FRONT_TOP_RIGHT]], [landmarks[FRONT_TOP_LEFT], landmarks[BACK_TOP_RIGHT]]);\n    const zMidPoint = lineIntersection([landmarks[FRONT_TOP_RIGHT], landmarks[FRONT_BOTTOM_LEFT]], [landmarks[FRONT_TOP_LEFT], landmarks[FRONT_BOTTOM_RIGHT]]);\n    const LINE_WIDTH = 8;\n    const TRIANGLE_BASE = 2 * LINE_WIDTH;\n    drawingUtils.drawConnectors(canvasCtx, [landmarks[CENTER], xMidPoint], [[0, 1]], {\n      color: color.x,\n      lineWidth: LINE_WIDTH\n    });\n    drawingUtils.drawConnectors(canvasCtx, [landmarks[CENTER], yMidPoint], [[0, 1]], {\n      color: color.y,\n      lineWidth: LINE_WIDTH\n    });\n    drawingUtils.drawConnectors(canvasCtx, [landmarks[CENTER], zMidPoint], [[0, 1]], {\n      color: color.z,\n      lineWidth: LINE_WIDTH\n    });\n    drawTriangle(canvasCtx, xMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.x, arctan360(xMidPoint.x - landmarks[CENTER].x, xMidPoint.y - landmarks[CENTER].y) + Math.PI / 2);\n    drawTriangle(canvasCtx, yMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.y, arctan360(yMidPoint.x - landmarks[CENTER].x, yMidPoint.y - landmarks[CENTER].y) + Math.PI / 2);\n    drawTriangle(canvasCtx, zMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.z, arctan360(zMidPoint.x - landmarks[CENTER].x, zMidPoint.y - landmarks[CENTER].y) + Math.PI / 2);\n  }\n  function lineIntersection(a, b) {\n    const yDiffB = b[0].y - b[1].y;\n    const xDiffB = b[0].x - b[1].x;\n    const top = (a[0].x - b[0].x) * yDiffB - (a[0].y - b[0].y) * xDiffB;\n    const bot = (a[0].x - a[1].x) * yDiffB - (a[0].y - a[1].y) * xDiffB;\n    const t = top / bot;\n    return {\n      x: a[0].x + t * (a[1].x - a[0].x),\n      y: a[0].y + t * (a[1].y - a[0].y),\n      depth: 0\n    };\n  }\n  function drawTriangle(ctx, point, height, base, color) {\n    let rotation = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    const canvas = ctx.canvas;\n    const realX = canvas.width * point.x;\n    const realY = canvas.height * point.y;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 1;\n    ctx.translate(realX, realY);\n    ctx.rotate(rotation);\n    ctx.moveTo(base / 2, 0);\n    ctx.lineTo(0, -height);\n    ctx.lineTo(-base / 2, 0);\n    ctx.lineTo(base / 2, 0);\n    ctx.translate(-realX, -realY);\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  }\n  function arctan360(x, y) {\n    if (x === 0) {\n      return y >= 0 ? Math.PI / 2 : -Math.PI / 2;\n    }\n    const angle = Math.atan(y / x);\n    if (x > 0) {\n      return angle;\n    }\n    return y >= 0 ? angle + Math.PI : angle - Math.PI;\n  }\n\n  // ###############################################################\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","DeviceDetector","jsxDEV","_jsxDEV","testSupport","client","supportedDevices","deviceDetector","detectedDevice","parse","navigator","userAgent","isSupported","device","undefined","re","RegExp","test","name","os","alert","App","controls","window","drawingUtils","mpObjectron","config","locateFile","file","examples","images","src","videos","videoElement","document","getElementsByClassName","canvasElement","controlsElement","canvasCtx","getContext","fpsControl","FPS","spinner","querySelector","ontransitionend","style","display","onResults","results","body","classList","add","tick","save","drawImage","image","width","height","objectDetections","detectedObject","landmarks","keypoints","map","x","point2d","drawConnectors","BOX_CONNECTIONS","color","drawAxes","y","z","drawLandmarks","restore","objectron","Objectron","ControlPanel","selfieMode","modelName","maxNumObjects","minDetectionConfidence","minTrackingConfidence","StaticText","title","SourcePicker","onSourceChanged","type","setOptions","staticImageMode","reset","onFrame","input","size","aspect","innerWidth","innerHeight","send","Toggle","field","DropDownControl","options","value","Slider","range","step","on","toggle","BACK_BOTTOM_RIGHT","BACK_TOP_LEFT","BACK_TOP_RIGHT","FRONT_BOTTOM_LEFT","FRONT_BOTTOM_RIGHT","FRONT_TOP_RIGHT","FRONT_TOP_LEFT","CENTER","BOX_KEYPOINTS","xMidPoint","lineIntersection","yMidPoint","zMidPoint","LINE_WIDTH","TRIANGLE_BASE","lineWidth","drawTriangle","arctan360","Math","PI","a","b","yDiffB","xDiffB","top","bot","t","depth","ctx","point","base","rotation","arguments","length","canvas","realX","realY","beginPath","fillStyle","strokeStyle","translate","rotate","moveTo","lineTo","fill","stroke","angle","atan","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/quanhuynh/workspace/myProject/VTT/test_code/python_src/npm_web/shoe-medipine/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles.css';\n// import { drawLandmarks } from '@mediapipe/drawing_utils';\nimport { Objectron } from '@mediapipe/objectron';\nimport { Camera, Control } from '@mediapipe/camera_utils';\nimport DeviceDetector from \"device-detector-js\";\n\n// import \n// Usage: testSupport({client?: string, os?: string}[])\n// Client and os are regular expressions.\n// See: https://cdn.jsdelivr.net/npm/device-detector-js@2.2.10/README.md for\n// legal values for client and os\ntestSupport([\n  {client: 'Chrome'},\n]);\n\nfunction testSupport(supportedDevices:{client?: string; os?: string;}[]) {\n  const deviceDetector = new DeviceDetector();\n  const detectedDevice = deviceDetector.parse(navigator.userAgent);\n\n  let isSupported = false;\n  for (const device of supportedDevices) {\n    if (device.client !== undefined) {\n      const re = new RegExp(`^${device.client}$`);\n      if (!re.test(detectedDevice.client.name)) {\n        continue;\n      }\n    }\n    if (device.os !== undefined) {\n      const re = new RegExp(`^${device.os}$`);\n      if (!re.test(detectedDevice.os.name)) {\n        continue;\n      }\n    }\n    isSupported = true;\n    break;\n  }\n  if (!isSupported) {\n    alert(`This demo, running on ${detectedDevice.client.name}/${detectedDevice.os.name}, ` +\n          `is not well supported at this time, continue at your own risk.`);\n  }\n}\n\n\n// const controls = window;\n// const drawingUtils = window;\n// const mpObjectron = window;\n// // const fpsControl = new controls.FPS();\n// const config = {locateFile: () => {\n//   return `./object_detection_3d_sneakers.tflite`;\n// }};\n\nfunction App() {\n\n\n//   const videoElement =\n//     document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\n//   const canvasElement =\n//     document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\n//   const controlsElement =\n//     document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\n//   const canvasCtx = canvasElement.getContext('2d')!;\n\n    \n\n//     function onResults(results: mpObjectron.Results): void {\n//       // Hide the spinner.\n//       document.body.classList.add('loaded');\n    \n//       console.log(results.image);\n//       // Update the frame rate.\n//       // fpsControl.tick();\n    \n//       // Draw the overlays.\n//       canvasCtx.save();\n//       canvasCtx.drawImage(results.image, 0, 0, canvasElement.width, canvasElement.height);\n//       if (!!results.objectDetections) {\n//         for (const detectedObject of results.objectDetections) {\n//           // Reformat keypoint information as landmarks, for easy drawing.\n//           console.log(detectedObject);\n//           // const landmarks:mpObjectron.Results =\n//           //     detectedObject.keypoints.map(x => x.point2d);\n//           // Draw bounding box.\n//           // drawingUtils.drawConnectors(canvasCtx, landmarks,\n//           //     mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n    \n//           // Draw Axes\n//           // drawAxes(canvasCtx, landmarks, {\n//           //   x: '#00FF00',\n//           //   y: '#FF0000',\n//           //   z: '#0000FF',\n//           // });\n//           // Draw centroid.\n//           // drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n//         }\n//       }\n//       canvasCtx.restore();\n//     }\n\n\n    \n//     // const objectron = new Objectron({locateFile: (file: any) => {\n//     //   // return `./object_detection_3d_sneakers.tflite`;\n//     //   return `https://cdn.jsdelivr.net/npm/@mediapipe/objectron/${file}`;\n//     // }});\n\n//     const objectron = new mpObjectron.Objectron(config);\n\n//     objectron.setOptions({\n//       modelName: 'Cup',\n//       maxNumObjects: 3,\n//     });\n//     objectron.onResults(onResults);\n    \n//     const camera = new Camera(videoElement, {\n//       onFrame: async () => {\n//         await objectron.send({image: videoElement});\n//       },\n//       width: 1280,\n//       height: 720\n//     });\n//     camera.start();\n// ###############################################################\n\n\nconst controls = window;\nconst drawingUtils = window;\nconst mpObjectron = window;\n\nconst config = {locateFile: (file:any) => {\n  return `https://cdn.jsdelivr.net/npm/@ @0.3.1627447724/${file}`;\n}};\n\nconst examples = {\n  images: [\n    {name: 'Camera image', src: 'https://assets.codepen.io/5409376/camera.jpg'},\n    {name: 'Chair image', src: 'https://assets.codepen.io/5409376/chair.jpg'},\n    {name: 'Cup image', src: 'https://assets.codepen.io/5409376/cup.jpg'},\n    {name: 'Shoe image', src: 'https://assets.codepen.io/5409376/shoe.jpg'},\n  ],\n  videos: [\n    {\n      name: 'Camera video',\n      src: 'https://assets.codepen.io/5409376/camera_3_8.mp4'\n    },\n    {\n      name: 'Chair video',\n      src: 'https://assets.codepen.io/5409376/chair_10_1.mp4'\n    },\n    {name: 'Cup video', src: 'https://assets.codepen.io/5409376/cup_43_42.mp4'},\n    {\n      name: 'Shoe video',\n      src: 'https://assets.codepen.io/5409376/shoe_1063642984-sd-trim-short.mov'\n    }\n  ],\n};\n\n// Our input frames will come from here.\nconst videoElement =\n    document.getElementsByClassName('input_video')[0] as HTMLVideoElement;\nconst canvasElement =\n    document.getElementsByClassName('output_canvas')[0] as HTMLCanvasElement;\nconst controlsElement =\n    document.getElementsByClassName('control-panel')[0] as HTMLDivElement;\nconst canvasCtx = canvasElement.getContext('2d')!;\n\n// We'll add this to our control panel later, but we'll save it here so we can\n// call tick() each time the graph runs.\nconst fpsControl = new controls.FPS();\n\n// Optimization: Turn off animated spinner after its hiding animation is done.\nconst spinner = document.querySelector('.loading')! as HTMLDivElement;\nspinner.ontransitionend = () => {\n  spinner.style.display = 'none';\n};\n\nfunction onResults(results: mpObjectron.Results): void {\n  // Hide the spinner.\n  document.body.classList.add('loaded');\n\n  // Update the frame rate.\n  fpsControl.tick();\n\n  // Draw the overlays.\n  canvasCtx.save();\n  canvasCtx.drawImage(\n      results.image, 0, 0, \n      canvasElement.width, canvasElement.height);\n  if (!!results.objectDetections) {\n    for (const detectedObject of results.objectDetections) {\n      // Reformat keypoint information as landmarks, for easy drawing.\n      const landmarks: mpObjectron.Point2D[] =\n          detectedObject.keypoints.map(x => x.point2d);\n      // Draw bounding box.\n      drawingUtils.drawConnectors(canvasCtx, landmarks,\n          mpObjectron.BOX_CONNECTIONS, {color: '#FF0000'});\n\n      // Draw Axes\n      drawAxes(canvasCtx, landmarks, {\n        x: '#00FF00',\n        y: '#FF0000',\n        z: '#0000FF',\n      });\n      // Draw centroid.\n      drawingUtils.drawLandmarks(canvasCtx, [landmarks[0]], {color: '#FFFFFF'});\n    }\n  }\n  canvasCtx.restore();\n}\n\nconst objectron = new mpObjectron.Objectron(config);\nobjectron.onResults(onResults);\n\n// Present a control panel through which the user can manipulate the solution\n// options.\nnew controls\n    .ControlPanel(controlsElement, {\n      selfieMode: false,\n      modelName: 'Shoe',\n      maxNumObjects: 5,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.99,\n    })\n    .add([\n      new controls.StaticText({title: 'MediaPipe Objectron'}),\n      fpsControl,\n      new controls.SourcePicker({\n        onSourceChanged: (name, type) => {\n          objectron.setOptions({staticImageMode: type !== 'image'});\n          objectron.reset();\n        },\n        onFrame:\n            async (input: controls.InputImage, size: controls.Rectangle) => {\n              const aspect = size.height / size.width;\n              let width: number, height: number;\n              if (window.innerWidth > window.innerHeight) {\n                height = window.innerHeight;\n                width = height / aspect;\n              } else {\n                width = window.innerWidth;\n                height = width * aspect;\n              }\n              canvasElement.width = width;\n              canvasElement.height = height;\n              await objectron.send({image: input});\n            },\n        examples,\n      }),\n      new controls.Toggle({title: 'Selfie Mode', field: 'selfieMode'}),\n      new controls.DropDownControl({\n        title: 'Model',\n        field: 'modelName',\n        options: [\n          {\n            name: 'Shoe',\n            value: 'Shoe',\n          },\n          {\n            name: 'Camera',\n            value: 'Camera',\n          },\n          {\n            name: 'Chair',\n            value: 'Chair',\n          },\n          {\n            name: 'Cup',\n            value: 'Cup',\n          },\n        ]\n      }),\n      new controls.Slider({\n        title: 'Max Num Objects',\n        field: 'maxNumObjects',\n        range: [1, 10],\n        step: 1,\n      }),\n      new controls.Slider({\n        title: 'Min Detection Confidence',\n        field: 'minDetectionConfidence',\n        range: [0, 1],\n        step: 0.01\n      }),\n      new controls.Slider({\n        title: 'Min Tracking Confidence',\n        field: 'minTrackingConfidence',\n        range: [0, 1],\n        step: 0.01\n      }),\n    ])\n    .on(x => {\n      const options = x as mpObjectron.Options;\n      videoElement.classList.toggle('selfie', options.selfieMode);\n      objectron.setOptions(options);\n    });\n\nfunction drawAxes(\n    canvasCtx: CanvasRenderingContext2D, landmarks: mpObjectron.Point2D[],\n    color: {x: string; y: string; z: string;}) {\n  const {\n    BACK_BOTTOM_RIGHT,\n    BACK_TOP_LEFT,\n    BACK_TOP_RIGHT,\n    FRONT_BOTTOM_LEFT,\n    FRONT_BOTTOM_RIGHT,\n    FRONT_TOP_RIGHT,\n    FRONT_TOP_LEFT,\n    CENTER\n  } = mpObjectron.BOX_KEYPOINTS;\n\n  const xMidPoint = lineIntersection(\n      [landmarks[BACK_BOTTOM_RIGHT], landmarks[FRONT_TOP_RIGHT]],\n      [landmarks[BACK_TOP_RIGHT], landmarks[FRONT_BOTTOM_RIGHT]]);\n  const yMidPoint = lineIntersection(\n      [landmarks[BACK_TOP_LEFT], landmarks[FRONT_TOP_RIGHT]],\n      [landmarks[FRONT_TOP_LEFT], landmarks[BACK_TOP_RIGHT]]);\n  const zMidPoint = lineIntersection(\n      [landmarks[FRONT_TOP_RIGHT], landmarks[FRONT_BOTTOM_LEFT]],\n      [landmarks[FRONT_TOP_LEFT], landmarks[FRONT_BOTTOM_RIGHT]]);\n\n  const LINE_WIDTH = 8;\n  const TRIANGLE_BASE = 2 * LINE_WIDTH;\n\n  drawingUtils.drawConnectors(\n      canvasCtx, [landmarks[CENTER], xMidPoint], [[0, 1]],\n      {color: color.x, lineWidth: LINE_WIDTH});\n  drawingUtils.drawConnectors(\n      canvasCtx, [landmarks[CENTER], yMidPoint], [[0, 1]],\n      {color: color.y, lineWidth: LINE_WIDTH});\n  drawingUtils.drawConnectors(\n      canvasCtx, [landmarks[CENTER], zMidPoint], [[0, 1]],\n      {color: color.z, lineWidth: LINE_WIDTH});\n\n  drawTriangle(\n      canvasCtx, xMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.x,\n      arctan360(\n          xMidPoint.x - landmarks[CENTER].x,\n          xMidPoint.y - landmarks[CENTER].y) +\n          Math.PI / 2);\n  drawTriangle(\n      canvasCtx, yMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.y,\n      arctan360(\n          yMidPoint.x - landmarks[CENTER].x,\n          yMidPoint.y - landmarks[CENTER].y) +\n          Math.PI / 2);\n  drawTriangle(\n      canvasCtx, zMidPoint, TRIANGLE_BASE, TRIANGLE_BASE, color.z,\n      arctan360(\n          zMidPoint.x - landmarks[CENTER].x,\n          zMidPoint.y - landmarks[CENTER].y) +\n          Math.PI / 2);\n}\n\nfunction lineIntersection(\n    a: mpObjectron.Point2D[], b: mpObjectron.Point2D[]): mpObjectron.Point2D {\n  const yDiffB = b[0].y - b[1].y;\n  const xDiffB = b[0].x - b[1].x;\n\n  const top = (a[0].x - b[0].x) * yDiffB - (a[0].y - b[0].y) * xDiffB;\n  const bot = (a[0].x - a[1].x) * yDiffB - (a[0].y - a[1].y) * xDiffB;\n  const t = top / bot;\n\n  return {\n    x: a[0].x + t * (a[1].x - a[0].x),\n    y: a[0].y + t * (a[1].y - a[0].y),\n    depth: 0,\n  };\n}\n\nfunction drawTriangle(\n    ctx: CanvasRenderingContext2D, point: mpObjectron.Point2D, height: number,\n    base: number, color: string, rotation: number = 0) {\n  const canvas = ctx.canvas;\n  const realX = canvas.width * point.x;\n  const realY = canvas.height * point.y;\n  ctx.save();\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.strokeStyle = color;\n  ctx.lineWidth = 1;\n  ctx.translate(realX, realY);\n  ctx.rotate(rotation);\n  ctx.moveTo(base / 2, 0);\n  ctx.lineTo(0, -height);\n  ctx.lineTo(-base / 2, 0);\n  ctx.lineTo(base / 2, 0);\n  ctx.translate(-realX, -realY);\n  ctx.fill();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction arctan360(x: number, y: number) {\n  if (x === 0) {\n    return y >= 0 ? Math.PI / 2 : -Math.PI / 2;\n  }\n\n  const angle = Math.atan(y / x);\n\n  if (x > 0) {\n    return angle;\n  }\n\n  return y >= 0 ? (angle + Math.PI) : angle - Math.PI;\n}\n\n\n\n\n\n// ###############################################################\n  return (\n    <div className=\"App\">\n      {/* <div className=\"container\">\n        <video className=\"input_video\"></video>\n        <canvas className=\"output_canvas\" width=\"1280px\" height=\"720px\"></canvas>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}